name: "[pytest] Unique ToolKit"

env:
  PACKAGE: unique_toolkit

on: 
  pull_request:
    paths:
      - 'unique_toolkit/**'


jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install Poetry
      run: |
        POETRY_VERSION='1.8.3'
        PIPX_HOME=/opt/pipx PIPX_BIN_DIR=/usr/local/bin pipx install poetry==$POETRY_VERSION

    - name: Install dependencies
      working-directory: ${{ env.PACKAGE }}
      run: poetry install

    - name: Run tests
      working-directory: ${{ env.PACKAGE }}
      run: poetry run pytest

    - name: Run deptry and comment on PR
      working-directory: ${{ env.PACKAGE }}
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Run deptry and capture output
        if DEPTRY_OUTPUT=$(poetry run deptry . --no-ansi 2>&1); then
          echo "✅ No dependency issues found"
        else
          echo "⚠️ Deptry found dependency issues:"
          echo "$DEPTRY_OUTPUT"
          
          # Only comment on PR if there are issues
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            gh pr comment ${{ github.event.number }} --body "## ️⚠️ Deptry Found Issuses ️⚠️ 

        \`\`\`
        $DEPTRY_OUTPUT
        \`\`\`"
          fi
        fi