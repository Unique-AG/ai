name: "[chore] Unique SDK - Enforce Changelog and Version Bump"

env:
  PACKAGE: unique_sdk

on: 
  pull_request:
    paths:
      - 'unique_sdk/**'
      - '!unique_sdk/**/docs/**'
      - '!unique_sdk/**/mkdocs.yaml'

jobs:
  validate-changes:
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for proper diff comparison

    - name: Validate CHANGELOG.md and version bump
      run: |
        # Get the merge base between the PR and target branch  
        git fetch origin ${{ github.base_ref }}
        MERGE_BASE=$(git merge-base HEAD origin/${{ github.base_ref }})
        
        echo "üîç Validating package: ${{ env.PACKAGE }}"
        
        # Check CHANGELOG.md is updated
        if ! git diff --name-only $MERGE_BASE..HEAD | grep -q "^${{ env.PACKAGE }}/CHANGELOG.md$"; then
          echo "‚ùå Error: ${{ env.PACKAGE }}/CHANGELOG.md must be updated in this PR"
          echo "Please add an entry to the changelog describing your changes."
          exit 1
        else
          echo "‚úÖ ${{ env.PACKAGE }}/CHANGELOG.md has been updated"
        fi
        
        # Check pyproject.toml exists and has been modified
        if ! git diff --name-only $MERGE_BASE..HEAD | grep -q "^${{ env.PACKAGE }}/pyproject.toml$"; then
          echo "‚ùå Error: ${{ env.PACKAGE }}/pyproject.toml must be updated in this PR"
          echo "Please update the version in pyproject.toml to reflect your changes."
          exit 1
        fi
        
        # Extract and compare versions
        BASE_VERSION=$(git show $MERGE_BASE:${{ env.PACKAGE }}/pyproject.toml | grep -E '^version\s*=' | sed -E 's/version\s*=\s*"([^"]+)"/\1/')
        CURRENT_VERSION=$(grep -E '^version\s*=' ${{ env.PACKAGE }}/pyproject.toml | sed -E 's/version\s*=\s*"([^"]+)"/\1/')
        
        echo "Base branch version: $BASE_VERSION"
        echo "Current branch version: $CURRENT_VERSION"
        
        if [ "$BASE_VERSION" = "$CURRENT_VERSION" ]; then
          echo "‚ùå Error: Version in ${{ env.PACKAGE }}/pyproject.toml has not been updated"
          echo "Please bump the version number to reflect your changes."
          echo "Current version: $CURRENT_VERSION"
          exit 1
        else
          echo "‚úÖ Version has been updated from $BASE_VERSION to $CURRENT_VERSION"
        fi