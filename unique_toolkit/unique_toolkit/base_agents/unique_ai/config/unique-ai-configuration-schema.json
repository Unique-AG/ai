{
    "$defs": {
        "BarChartConfig": {
            "properties": {
                "colorScheme": {
                    "default": [
                        "#95D7D1",
                        "#3EB2D2",
                        "#275C5E",
                        "#225168",
                        "#A9A68E",
                        "#605A4C"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "title": "Color Scheme",
                    "type": "array"
                },
                "fontSize": {
                    "default": 12,
                    "title": "Font Size",
                    "type": "integer"
                },
                "fontColor": {
                    "default": "#1F1F1F",
                    "title": "Font Color",
                    "type": "string"
                },
                "width": {
                    "default": 850,
                    "title": "Width",
                    "type": "integer"
                },
                "height": {
                    "default": 400,
                    "title": "Height",
                    "type": "integer"
                },
                "hole": {
                    "default": 0.3,
                    "title": "Hole",
                    "type": "number"
                },
                "scopeId": {
                    "default": "",
                    "title": "Scope Id",
                    "type": "string"
                }
            },
            "title": "Bar Chart Config",
            "type": "object"
        },
        "BasicCrawlerConfig": {
            "properties": {
                "crawlerType": {
                    "const": "BasicCrawler",
                    "default": "BasicCrawler",
                    "title": "Crawler Type",
                    "type": "string"
                },
                "semaphoreCount": {
                    "default": 10,
                    "description": "The number of concurrent requests to make to the same domain.",
                    "title": "Semaphore Count",
                    "type": "integer"
                },
                "timeout": {
                    "default": 5.0,
                    "description": "The timeout for the requests in seconds. This applies to the overall request timeout including connect, read, and write operations.",
                    "title": "Timeout",
                    "type": "number"
                },
                "cleaningStrategyConfig": {
                    "$ref": "#/$defs/CleaningStrategyConfig",
                    "description": "The cleaning strategy configuration."
                }
            },
            "title": "Basic Crawler Config",
            "type": "object"
        },
        "BingConfig": {
            "properties": {
                "searchEngineName": {
                    "const": "Bing",
                    "default": "Bing",
                    "title": "Search Engine Name",
                    "type": "string"
                },
                "fetchSize": {
                    "default": 10,
                    "description": "Number of search results to fetch",
                    "title": "Fetch Size",
                    "type": "integer"
                },
                "urlPatternBlacklist": {
                    "default": [
                        ".*\\.pdf$"
                    ],
                    "description": "List of URL patterns to blacklist",
                    "items": {
                        "type": "string"
                    },
                    "title": "Url Pattern Blacklist",
                    "type": "array"
                },
                "bannedDomains": {
                    "default": [],
                    "description": "List of banned domains",
                    "items": {
                        "type": "string"
                    },
                    "title": "Banned Domains",
                    "type": "array"
                },
                "customSearchConfig": {
                    "$ref": "#/$defs/BingCustomSearchConfig",
                    "default": {
                        "id": null,
                        "boostedSearchDomains": [],
                        "searchCountryCode": null,
                        "searchMarket": null
                    },
                    "title": "Custom Search Config"
                }
            },
            "title": "Bing Config",
            "type": "object"
        },
        "BingCustomSearchConfig": {
            "properties": {
                "id": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Custom Config ID. Can be setup from https://www.customsearch.ai/",
                    "title": "Id"
                },
                "boostedSearchDomains": {
                    "default": [],
                    "description": "List of domains to boost in search results",
                    "items": {
                        "type": "string"
                    },
                    "title": "Boosted Search Domains",
                    "type": "array"
                },
                "searchCountryCode": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Search Country Code (e.g. CH). Default is None",
                    "title": "Search Country Code"
                },
                "searchMarket": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Search Market (e.g. de-CH). Default is None",
                    "title": "Search Market"
                }
            },
            "title": "Bing Custom Search Config",
            "type": "object"
        },
        "BooleanColumnCleaningConfig": {
            "properties": {
                "trueValues": {
                    "default": [
                        "t",
                        "y",
                        "ja",
                        "1",
                        "oui",
                        "true",
                        "yes"
                    ],
                    "description": "For boolean columns, values that are considered true",
                    "items": {
                        "type": "string"
                    },
                    "title": "True Values",
                    "type": "array",
                    "uniqueItems": true
                },
                "falseValues": {
                    "default": [
                        "false",
                        "no",
                        "nein",
                        "non",
                        "0",
                        "f",
                        "n"
                    ],
                    "description": "For boolean columns, values that are considered false",
                    "items": {
                        "type": "string"
                    },
                    "title": "False Values",
                    "type": "array",
                    "uniqueItems": true
                }
            },
            "title": "Boolean Column Cleaning Config",
            "type": "object"
        },
        "CacheMode": {
            "description": "Defines the caching behavior for web crawling operations.\n\nModes:\n- ENABLED: Normal caching behavior (read and write)\n- DISABLED: No caching at all\n- READ_ONLY: Only read from cache, don't write\n- WRITE_ONLY: Only write to cache, don't read\n- BYPASS: Bypass cache for this operation",
            "enum": [
                "enabled",
                "disabled",
                "read_only",
                "write_only",
                "bypass"
            ],
            "title": "CacheMode",
            "type": "string"
        },
        "ChartGeneratorToolConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_0806",
                    "title": "Language Model"
                },
                "additionalLlmOptions": {
                    "additionalProperties": true,
                    "default": {},
                    "description": "Additional options to pass to the language model.",
                    "title": "Additional Llm Options",
                    "type": "object"
                },
                "chartTypes": {
                    "default": [
                        "BarChart",
                        "LineChart",
                        "PieChart"
                    ],
                    "description": "List of supported chart types",
                    "items": {
                        "$ref": "#/$defs/ChartTypes"
                    },
                    "title": "Chart Types",
                    "type": "array"
                },
                "toolDescription": {
                    "default": "This is a plot generator tool. To be used if the user asks to generate a LineChart or a PieChart or a BarChart. Carefully choose the correct chart type depending on the user request.",
                    "description": "Description of the chart generator tool",
                    "title": "Tool Description",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "This tool should never been used without planning and listing the required data to create the chart.",
                    "description": "Description of the tool for the system prompt",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "This is a plot generator tool. To be used if the user asks to generate a LineChart or a PieChart or a BarChart. Summarize the data in a text with sources before making the call to this tool.",
                    "description": "Format information for the system prompt",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "colorScheme": {
                    "default": [
                        "#95D7D1",
                        "#3EB2D2",
                        "#275C5E",
                        "#225168",
                        "#A9A68E",
                        "#605A4C"
                    ],
                    "description": "Color scheme for charts",
                    "items": {
                        "type": "string"
                    },
                    "title": "Color Scheme",
                    "type": "array"
                },
                "titleFontSize": {
                    "default": 24,
                    "description": "Default font size for chart title",
                    "title": "Title Font Size",
                    "type": "integer"
                },
                "fontSize": {
                    "default": 12,
                    "description": "Default font size for chart text",
                    "title": "Font Size",
                    "type": "integer"
                },
                "fontColor": {
                    "default": "#1F1F1F",
                    "description": "Default font color for chart text",
                    "title": "Font Color",
                    "type": "string"
                },
                "fontFamily": {
                    "default": "Arial",
                    "description": "Default font family for chart text",
                    "title": "Font Family",
                    "type": "string"
                },
                "width": {
                    "default": 850,
                    "description": "Default chart width in pixels",
                    "title": "Width",
                    "type": "integer"
                },
                "height": {
                    "default": 400,
                    "description": "Default chart height in pixels",
                    "title": "Height",
                    "type": "integer"
                },
                "hole": {
                    "default": 0.3,
                    "description": "Default hole size for donut charts",
                    "exclusiveMaximum": 1,
                    "exclusiveMinimum": 0,
                    "title": "Hole",
                    "type": "number"
                },
                "scopeId": {
                    "default": "",
                    "description": "Scope identifier",
                    "title": "Scope Id",
                    "type": "string"
                },
                "historyMaxTokenLimit": {
                    "default": 10000,
                    "description": "Maximum token limit for history",
                    "title": "History Max Token Limit",
                    "type": "integer"
                },
                "historyMaxTokenLimitFraction": {
                    "default": 0.5,
                    "description": "Fraction of max token limit to use for history",
                    "exclusiveMaximum": 1,
                    "exclusiveMinimum": 0,
                    "title": "History Max Token Limit Fraction",
                    "type": "number"
                },
                "defaultMaxMessages": {
                    "default": 3,
                    "description": "Default maximum number of messages to keep in history",
                    "title": "Default Max Messages",
                    "type": "integer"
                },
                "scale": {
                    "default": null,
                    "description": "Default scale for charts",
                    "title": "Scale",
                    "type": "number"
                },
                "imageFormat": {
                    "default": "png",
                    "description": "Default image format for charts",
                    "title": "Image Format",
                    "type": "string"
                }
            },
            "title": "Chart Generator Tool Config",
            "type": "object"
        },
        "ChartTypes": {
            "enum": [
                "BarChart",
                "LineChart",
                "PieChart"
            ],
            "title": "ChartTypes",
            "type": "string"
        },
        "ChunkRelevancySortConfig": {
            "properties": {
                "enabled": {
                    "default": false,
                    "description": "Whether to enable the chunk relevancy sort.",
                    "title": "Enabled",
                    "type": "boolean"
                },
                "relevancyLevelsToConsider": {
                    "default": [
                        "high",
                        "medium",
                        "low"
                    ],
                    "description": "The relevancy levels to consider.",
                    "items": {
                        "type": "string"
                    },
                    "title": "Relevancylevelstoconsider",
                    "type": "array"
                },
                "relevancyLevelOrder": {
                    "additionalProperties": {
                        "type": "integer"
                    },
                    "default": {
                        "high": 0,
                        "medium": 1,
                        "low": 2
                    },
                    "description": "The relevancy level order.",
                    "title": "Relevancylevelorder",
                    "type": "object"
                },
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_35_TURBO_0125",
                    "description": "The language model to use for the chunk relevancy sort."
                },
                "fallbackLanguageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_35_TURBO_0125",
                    "description": "The language model to use as a fallback."
                },
                "additionalLlmOptions": {
                    "additionalProperties": true,
                    "default": {},
                    "description": "Additional options to pass to the language model.",
                    "title": "Additionalllmoptions",
                    "type": "object"
                },
                "structuredOutputConfig": {
                    "$ref": "#/$defs/StructuredOutputConfig",
                    "description": "The configuration for the structured output."
                },
                "maxTasks": {
                    "default": null,
                    "title": "Maxtasks",
                    "type": "integer"
                }
            },
            "title": "ChunkRelevancySortConfig",
            "type": "object"
        },
        "CleaningStrategyConfig": {
            "properties": {
                "markdownCleaningTimeout": {
                    "default": 5.0,
                    "description": "Timeout for markdown cleaning.",
                    "title": "Markdown Cleaning Timeout",
                    "type": "number"
                },
                "removeNestedImagesAndLinks": {
                    "default": true,
                    "description": "Whether to clean nested images and links in the content.",
                    "title": "Remove Nested Images And Links",
                    "type": "boolean"
                },
                "removeSimpleImagesAndLinks": {
                    "default": true,
                    "description": "Whether to clean simple images and links in the content.",
                    "title": "Remove Simple Images And Links",
                    "type": "boolean"
                },
                "removeMultipleLinebreaks": {
                    "default": true,
                    "description": "Whether to clean multiple linebreaks in the content.",
                    "title": "Remove Multiple Linebreaks",
                    "type": "boolean"
                },
                "removeRepeatingPatterns": {
                    "default": false,
                    "description": "Whether to clean repeating patterns in the content.",
                    "title": "Remove Repeating Patterns",
                    "type": "boolean"
                }
            },
            "title": "Cleaning Strategy Config",
            "type": "object"
        },
        "ColumnConfig": {
            "properties": {
                "name": {
                    "description": "Name of the column",
                    "title": "Name",
                    "type": "string"
                },
                "columnType": {
                    "$ref": "#/$defs/ColumnType",
                    "title": "Column Type"
                },
                "nullable": {
                    "default": true,
                    "description": "Whether the column can be null",
                    "title": "Nullable",
                    "type": "boolean"
                },
                "unique": {
                    "default": false,
                    "description": "Whether the column is unique",
                    "title": "Unique",
                    "type": "boolean"
                },
                "displayConfig": {
                    "$ref": "#/$defs/ColumnDisplayConfig",
                    "title": "Display Config"
                },
                "fuzzySearchConfig": {
                    "$ref": "#/$defs/ColumnFuzzySearchConfig",
                    "title": "Fuzzy Search Config"
                },
                "promptConfig": {
                    "$ref": "#/$defs/ColumnPromptConfig",
                    "title": "Prompt Config"
                },
                "cleaningConfig": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/StringColumnCleaningConfig"
                        },
                        {
                            "$ref": "#/$defs/BooleanColumnCleaningConfig"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "title": "Cleaning Config"
                }
            },
            "required": [
                "name",
                "columnType"
            ],
            "title": "Column Config",
            "type": "object"
        },
        "ColumnDisplayConfig": {
            "properties": {
                "isLongTextField": {
                    "default": false,
                    "description": "Column will not be shown in the final answer.",
                    "title": "Is Long Text Field",
                    "type": "boolean"
                }
            },
            "title": "Column Display Config",
            "type": "object"
        },
        "ColumnFuzzySearchConfig": {
            "properties": {
                "enableFuzzySearch": {
                    "default": false,
                    "description": "Enable fuzzy search for the column.",
                    "title": "Enable Fuzzy Search",
                    "type": "boolean"
                },
                "backendConfig": {
                    "discriminator": {
                        "mapping": {
                            "fulltext": "#/$defs/FulltextBackendConfig",
                            "levenshtein": "#/$defs/LevenshteinBackendConfig",
                            "wildcard": "#/$defs/WildcardBackendConfig"
                        },
                        "propertyName": "backendName"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/$defs/FulltextBackendConfig"
                        },
                        {
                            "$ref": "#/$defs/LevenshteinBackendConfig"
                        },
                        {
                            "$ref": "#/$defs/WildcardBackendConfig"
                        }
                    ],
                    "title": "Backend Config"
                }
            },
            "title": "Column Fuzzy Search Config",
            "type": "object"
        },
        "ColumnPromptConfig": {
            "properties": {
                "description": {
                    "default": "",
                    "description": "Description of the content in the column",
                    "title": "Description",
                    "type": "string"
                },
                "show_distinct_values_in_prompt": {
                    "default": false,
                    "description": "Inject the distinct values of the column in the prompt.",
                    "title": "Show Distinct Values In Prompt",
                    "type": "boolean"
                },
                "num_example_values": {
                    "default": 3,
                    "title": "Num Example Values",
                    "type": "integer"
                },
                "use_most_common_values": {
                    "default": false,
                    "description": "Should the most common values be used for the column for examples",
                    "title": "Use Most Common Values",
                    "type": "boolean"
                },
                "fuzzy_search_enabled": {
                    "default": false,
                    "description": "Whether fuzzy search is enabled for the column. Note that this is only used for constructing the prompt.",
                    "title": "Fuzzy Search Enabled",
                    "type": "boolean"
                },
                "required_in_select": {
                    "default": false,
                    "description": "Whether the column is required in the SELECT clause.",
                    "title": "Required In Select",
                    "type": "boolean"
                }
            },
            "title": "ColumnPromptConfig",
            "type": "object"
        },
        "ColumnType": {
            "enum": [
                "boolean",
                "numeric",
                "integer",
                "string",
                "date",
                "datetime"
            ],
            "title": "ColumnType",
            "type": "string"
        },
        "ContentAdapterConfig": {
            "properties": {
                "chunkSize": {
                    "default": 1000,
                    "description": "Number of chunks to split the search results",
                    "title": "Chunk Size",
                    "type": "integer"
                },
                "chunkingMaxWorkers": {
                    "default": 10,
                    "description": "Number of workers to embed search results",
                    "title": "Chunking Max Workers",
                    "type": "integer"
                },
                "contentProcessingStrategyConfig": {
                    "description": "The strategy to use for content processing",
                    "discriminator": {
                        "mapping": {
                            "summarize": "#/$defs/SummarizeWebpageConfig",
                            "truncate": "#/$defs/TruncatePageToMaxTokensConfig"
                        },
                        "propertyName": "strategy"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/$defs/SummarizeWebpageConfig"
                        },
                        {
                            "$ref": "#/$defs/TruncatePageToMaxTokensConfig"
                        }
                    ],
                    "title": "Content Processing Strategy Config"
                }
            },
            "title": "Content Adapter Config",
            "type": "object"
        },
        "ContentRerankerConfig": {
            "properties": {
                "deploymentName": {
                    "title": "Deploymentname",
                    "type": "string"
                },
                "options": {
                    "anyOf": [
                        {
                            "additionalProperties": true,
                            "type": "object"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Options"
                }
            },
            "required": [
                "deploymentName"
            ],
            "title": "ContentRerankerConfig",
            "type": "object"
        },
        "ContentSearchType": {
            "enum": [
                "COMBINED",
                "VECTOR"
            ],
            "title": "ContentSearchType",
            "type": "string"
        },
        "ConversationSummaryConfig": {
            "properties": {
                "contentId": {
                    "default": "",
                    "title": "Content Id",
                    "type": "string"
                }
            },
            "title": "Conversation Summary Config",
            "type": "object"
        },
        "Crawl4AiCrawlerConfig": {
            "properties": {
                "crawlerType": {
                    "const": "Crawl4AiCrawler",
                    "default": "Crawl4AiCrawler",
                    "title": "Crawler Type",
                    "type": "string"
                },
                "semaphoreCount": {
                    "default": 10,
                    "description": "The number of concurrent requests to make to the same domain.",
                    "title": "Semaphore Count",
                    "type": "integer"
                },
                "timeout": {
                    "default": 5.0,
                    "description": "The timeout for the requests in seconds. This applies to the overall request timeout including connect, read, and write operations.",
                    "title": "Timeout",
                    "type": "number"
                },
                "cleaningStrategyConfig": {
                    "$ref": "#/$defs/CleaningStrategyConfig",
                    "description": "The cleaning strategy configuration."
                },
                "maxSessionPermit": {
                    "default": 10,
                    "description": "The maximum number of sessions to make to the same domain.",
                    "title": "Max Session Permit",
                    "type": "integer"
                },
                "markdownGeneratorConfig": {
                    "$ref": "#/$defs/MarkdownGeneratorConfig",
                    "description": "The markdown generator configuration"
                },
                "rateLimiterConfig": {
                    "$ref": "#/$defs/RateLimiterConfig",
                    "description": "The rate limiter configuration"
                },
                "crawlerConfig": {
                    "$ref": "#/$defs/CrawlerConfig",
                    "description": "The crawler configuration"
                },
                "pruningContentFilterConfig": {
                    "$ref": "#/$defs/PruningContentFilterConfig",
                    "description": "The pruning content filter configuration"
                }
            },
            "title": "Crawl4 Ai Crawler Config",
            "type": "object"
        },
        "CrawlerConfig": {
            "properties": {
                "cacheMode": {
                    "$ref": "#/$defs/CacheMode",
                    "default": "bypass",
                    "description": "The cache mode",
                    "title": "Cache Mode"
                },
                "scanFullPage": {
                    "default": true,
                    "description": "Whether to scan the full page",
                    "title": "Scan Full Page",
                    "type": "boolean"
                },
                "waitUntil": {
                    "default": "domcontentloaded",
                    "description": "The condition to wait for when navigating",
                    "title": "Wait Until",
                    "type": "string"
                },
                "scrollDelay": {
                    "default": 0.05,
                    "description": "The delay to scroll the page",
                    "title": "Scroll Delay",
                    "type": "number"
                },
                "removeOverlayElements": {
                    "default": true,
                    "description": "Whether to remove the overlay elements",
                    "title": "Remove Overlay Elements",
                    "type": "boolean"
                },
                "simulateUser": {
                    "default": true,
                    "description": "Whether to simulate the user",
                    "title": "Simulate User",
                    "type": "boolean"
                },
                "overrideNavigator": {
                    "default": true,
                    "description": "Whether to override the navigator",
                    "title": "Override Navigator",
                    "type": "boolean"
                }
            },
            "title": "Crawler Config",
            "type": "object"
        },
        "DocumentGeneratorToolConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_1120",
                    "title": "Language Model"
                },
                "toolDescription": {
                    "default": "Generate a document from the given text",
                    "title": "Tool Description",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "Generate a document from the given text",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "Generate a document from the given text",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "docxConfig": {
                    "$ref": "#/$defs/DocxGeneratorConfig",
                    "default": {
                        "uploadSuffix": "_report_output.docx",
                        "uploadScopeId": null,
                        "uploadToChat": true,
                        "templateContentId": null,
                        "templateName": "template.docx",
                        "templateScopeId": null,
                        "templateFields": {
                            "date": "17/07/2025",
                            "document_title": "Template Document"
                        },
                        "skipIngestion": true
                    },
                    "title": "Docx Config"
                },
                "xlsxConfig": {
                    "$ref": "#/$defs/ExcelGeneratorConfig",
                    "default": {
                        "uploadSuffix": "_answers.xlsx",
                        "uploadScopeId": null,
                        "uploadToChat": true,
                        "renameColMap": null,
                        "tableHeaderFormat": {
                            "bg_color": "#966919",
                            "bold": true,
                            "font_color": "white",
                            "text_wrap": true
                        },
                        "skipIngestion": true,
                        "tableDataFormat": {
                            "bg_color": "#FFFFFF",
                            "bold": false,
                            "border": 1,
                            "font_color": "black",
                            "text_wrap": true,
                            "valign": "top"
                        }
                    },
                    "title": "Xlsx Config"
                },
                "defaultHistoryMaxTokenLimit": {
                    "default": 10000,
                    "title": "Default History Max Token Limit",
                    "type": "integer"
                },
                "percentageOfHistoryMaxTokenLimitToUse": {
                    "default": 50,
                    "title": "Percentage Of History Max Token Limit To Use",
                    "type": "integer"
                },
                "defaultMaxMessages": {
                    "default": 10,
                    "title": "Default Max Messages",
                    "type": "integer"
                }
            },
            "title": "Document Generator Tool Config",
            "type": "object"
        },
        "DocumentParserConfig": {
            "properties": {
                "maxTokensForSources": {
                    "default": 10000,
                    "title": "Max Tokens For Sources",
                    "type": "integer"
                }
            },
            "title": "Document Parser Config",
            "type": "object"
        },
        "DocumentSummarizerServiceConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_1120"
                },
                "systemMessage": {
                    "default": "\nYou are a helpful AI designed to summarize a document (delimited by <document>) using a given task description (delimited by <task_description>). First reason based on the task description whether the whole document or only parts of it are relevant for the summary, then proceed with the summary and output only the summary in markdown format. If none of the document is relevant for the summary, return an empty string.\n",
                    "title": "Systemmessage",
                    "type": "string"
                },
                "userMessage": {
                    "default": "\nSummary task description:\n<task_description>\n$task_description\n</task_description>\n\nDocument:\n<document>\n$document_text\n</document>\n\nMarkdown output:\n",
                    "title": "Usermessage",
                    "type": "string"
                },
                "maxTokensPerSummaryStep": {
                    "default": 5000,
                    "title": "Maxtokenspersummarystep",
                    "type": "integer"
                },
                "numWorkers": {
                    "default": 20,
                    "title": "Numworkers",
                    "type": "integer"
                }
            },
            "title": "DocumentSummarizerServiceConfig",
            "type": "object"
        },
        "DocumentSummarizerToolConfig": {
            "description": "Configuration for the Document Summarizer Tool wrapper.\nThis contains the configuration for the underlying DocumentSummarizerService.",
            "properties": {
                "toolDescription": {
                    "default": "Analyse and/or summarize one or more documents into a user specified format",
                    "title": "Tool Description",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "Use this tool to generate comprehensive analysis and/or summaries of one or more documents into a user-specified format where all data and chunks are investigatedThis tool is especially helpful when dealing with long or complex documents that need to be condensed into key points where all information needs to be reviewed You can specify the level of detail, focus areas, and preferred structure for the summary. ",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "paramDescriptionTaskDescription": {
                    "default": "The summary task description for the LLM to follow as instructions for summarizing the documents",
                    "title": "Param Description Task Description",
                    "type": "string"
                },
                "evaluationCheckList": {
                    "default": [],
                    "items": {
                        "$ref": "#/$defs/EvaluationMetricName"
                    },
                    "title": "Evaluation Check List",
                    "type": "array"
                },
                "updateDelaySeconds": {
                    "default": 2,
                    "description": "Forced delay in seconds between progress updates. 0 means update on every summary without delay",
                    "maximum": 15.0,
                    "minimum": 0.0,
                    "title": "Update Delay Seconds",
                    "type": "number"
                },
                "summarizerConfig": {
                    "$ref": "#/$defs/DocumentSummarizerServiceConfig",
                    "default": {
                        "languageModel": "AZURE_GPT_4o_2024_1120",
                        "systemMessage": "You are an helpful AI designed to perform a deep analyze a list of documents (delimited by <document>) using a given task description provided by the user (delimited by <task_description>).             You should only output the final summary in a markdown format. If no parts of the documents is relevant for the summary, return an empty string.",
                        "userMessage": "\nSummary task description:\n<task_description>\n$task_description\n</task_description>\n\nDocument:\n<document>\n$document_text\n</document>\n\nMarkdown output:\n",
                        "maxTokensPerSummaryStep": 5000,
                        "numWorkers": 4
                    },
                    "title": "Summarizer Config"
                },
                "missingContentScopeErrorMessage": {
                    "default": "You did not select the knowledge base scope to be evaluated by the document summarizer tool. This is required. Please select the relevant documents and try again.",
                    "title": "Missing Content Scope Error Message",
                    "type": "string"
                },
                "maxContentObjectsAllowedToFetch": {
                    "default": 50,
                    "description": "The maximum number of content objects to allowed to be fetched. This is a hard limit that will stop the tool call if user exceeds the limit.",
                    "title": "Max Content Objects Allowed To Fetch",
                    "type": "integer"
                },
                "taskDescriptionTemplate": {
                    "anyOf": [
                        {
                            "type": "string"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "description": "Custom Jinja2 template for task description. If not provided, uses the default template from file.",
                    "title": "Task Description Template"
                }
            },
            "title": "Document Summarizer Tool Config",
            "type": "object"
        },
        "DocumentType": {
            "enum": [
                5,
                6,
                7,
                10,
                11,
                12,
                13,
                14,
                15,
                17,
                18,
                19,
                20,
                22
            ],
            "title": "DocumentType",
            "type": "integer"
        },
        "DocxGeneratorConfig": {
            "properties": {
                "uploadSuffix": {
                    "default": "_report_output.docx",
                    "description": "The suffix of the uploaded file.",
                    "title": "Upload Suffix",
                    "type": "string"
                },
                "uploadScopeId": {
                    "default": null,
                    "description": "The scope ID where the generated DOCX file will be uploaded. If not provided and upload_to_chat is False, an error will be raised.",
                    "title": "Upload Scope Id",
                    "type": "string"
                },
                "uploadToChat": {
                    "default": true,
                    "description": "Whether to upload the file to the chat.",
                    "title": "Upload To Chat",
                    "type": "boolean"
                },
                "templateContentId": {
                    "default": null,
                    "description": "The content ID of the template file to be found in the templateScopeId. If not provided, the default template will be used.",
                    "title": "Template Content Id",
                    "type": "string"
                },
                "templateName": {
                    "default": "template.docx",
                    "deprecated": true,
                    "description": "The name of the template file to be found in the templateScopeId. If not provided, or match no file, the default template will be used.",
                    "title": "Template Name",
                    "type": "string"
                },
                "templateScopeId": {
                    "default": null,
                    "deprecated": true,
                    "description": "The scope ID where the template file is stored. If not provided, the default template will be used.",
                    "title": "Template Scope Id",
                    "type": "string"
                },
                "templateFields": {
                    "additionalProperties": true,
                    "default": {
                        "date": "17/07/2025",
                        "document_title": "Template Document"
                    },
                    "description": "The fields to be replaced in the template.",
                    "title": "Template Fields",
                    "type": "object"
                },
                "skipIngestion": {
                    "default": true,
                    "description": "Whether to skip the ingestion of the file.",
                    "title": "Skip Ingestion",
                    "type": "boolean"
                }
            },
            "title": "Docx Generator Config",
            "type": "object"
        },
        "EncoderName": {
            "enum": [
                "o200k_base",
                "cl100k_base"
            ],
            "title": "EncoderName",
            "type": "string"
        },
        "EvaluationConfig": {
            "properties": {
                "maxReviewSteps": {
                    "default": 3,
                    "title": "Max Review Steps",
                    "type": "integer"
                },
                "hallucinationConfig": {
                    "$ref": "#/$defs/HallucinationConfig",
                    "default": {
                        "enabled": false,
                        "name": "hallucination",
                        "languageModel": "AZURE_GPT_4o_2024_1120",
                        "additionalLlmOptions": {},
                        "customPrompts": {
                            "systemPrompt": "\nYou will receive a question, references, a conversation between a user and an agent, and an output. \nThe output is the answer to the question. \nYour task is to evaluate if the output is fully supported by the information provided in the references and conversation, and provide explanations on your judgement in 2 sentences.\n\nUse the following entailment scale to generate a score:\n[low] - All information in output is supported by the references/conversation, or extractions from the references/conversation.\n[medium] - The output is supported by the references/conversation to some extent, but there is at least some information in the output that is not discussed in the references/conversation. For example, if an instruction asks about two concepts and the references/conversation only discusses either of them, it should be considered a [medium] hallucination level.\n[high] - The output contains information that is not part of the references/conversation, is unrelated to the references/conversation, or contradicts the references/conversation.\n\nMake sure to not use any external information/knowledge to judge whether the output is true or not. Only check whether the output is supported by the references/conversation, and not whether the output is correct or not. Also do not evaluate if the references/conversation contain further information that is not part of the output but could be relevant to the question. If the output mentions a plot or chart, ignore this information in your evaluation.\n\nYour answer must be in JSON format:\n{\n \"reason\": Your explanation of your judgement of the evaluation,\n \"value\": decision, must be one of the following: [\"high\", \"medium\", \"low\"]\n}                                                  \n",
                            "systemPromptDefault": "\nYou will receive a question and an output. \nThe output is the answer to the question. \nThe situation is that no references could be found to answer the question. Your task is to evaluate if the output contains any information to answer the question,\nand provide a short explanations of your reasoning in 2 sentences. Also mention in your explanation that no references were provided to answer the question.\n\nUse the following entailment scale to generate a score:\n[low] - The output does not contain any information to answer the question.\n[medium] - The output contains some information to answer the question, but does not answer the question entirely. \n[high] - The output answers the question.\n\nIt is not considered an answer when the output relates to the questions subject. Make sure to not use any external information/knowledge to judge whether the output is true or not. Only check that the output does not answer the question, and not whether the output is correct or not.\nYour answer must be in JSON format:\n{\n \"reason\": Your explanation of your reasoning of the evaluation,\n \"value\": decision, must be one of the following: [\"low\", \"medium\", \"high\"]\n}\n",
                            "userPrompt": "\nHere is the data:\n\nInput:\n'''\n$input_text\n'''\n\nReferences:\n'''\n$contexts_text\n'''\n\nConversation:\n'''\n$history_messages_text\n'''\n\nOutput:\n'''\n$output_text\n'''\n\nAnswer as JSON:\n",
                            "userPromptDefault": "                                                  \nHere is the data:\n\nInput:\n'''\n$input_text\n'''\n\nOutput:\n'''\n$output_text\n'''\n\nAnswer as JSON:\n"
                        },
                        "scoreToLabel": {
                            "HIGH": "RED",
                            "LOW": "GREEN",
                            "MEDIUM": "YELLOW"
                        },
                        "scoreToTitle": {
                            "HIGH": "High Hallucination",
                            "LOW": "No Hallucination Detected",
                            "MEDIUM": "Hallucination Warning"
                        }
                    },
                    "title": "Hallucination Config"
                }
            },
            "title": "Evaluation Config",
            "type": "object"
        },
        "EvaluationMetricName": {
            "enum": [
                "hallucination",
                "relevancy"
            ],
            "title": "EvaluationMetricName",
            "type": "string"
        },
        "ExcelGeneratorConfig": {
            "properties": {
                "uploadSuffix": {
                    "default": "_answers.xlsx",
                    "description": "The suffix of the uploaded file.",
                    "title": "Upload Suffix",
                    "type": "string"
                },
                "uploadScopeId": {
                    "default": null,
                    "title": "Upload Scope Id",
                    "type": "string"
                },
                "uploadToChat": {
                    "default": true,
                    "title": "Upload To Chat",
                    "type": "boolean"
                },
                "renameColMap": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": null,
                    "title": "Rename Col Map",
                    "type": "object"
                },
                "tableHeaderFormat": {
                    "additionalProperties": true,
                    "default": {
                        "bg_color": "#966919",
                        "bold": true,
                        "font_color": "white",
                        "text_wrap": true
                    },
                    "title": "Table Header Format",
                    "type": "object"
                },
                "skipIngestion": {
                    "default": true,
                    "title": "Skip Ingestion",
                    "type": "boolean"
                },
                "tableDataFormat": {
                    "additionalProperties": true,
                    "default": {
                        "bg_color": "#FFFFFF",
                        "bold": false,
                        "font_color": "black",
                        "text_wrap": true,
                        "border": 1,
                        "valign": "top"
                    },
                    "title": "Table Data Format",
                    "type": "object"
                }
            },
            "title": "Excel Generator Config",
            "type": "object"
        },
        "ExperimentalFeatures": {
            "properties": {
                "fullSourcesSerializeDump": {
                    "default": false,
                    "description": "Whether to include the full source object in the tool response. If True, includes the full Source object. If False, uses the old format with only source_number and content.",
                    "title": "Full Sources Serialize Dump",
                    "type": "boolean"
                }
            },
            "title": "Experimental Features",
            "type": "object"
        },
        "FollowUpCategory": {
            "enum": [
                "clarification",
                "elaboration",
                "comparison",
                "implication",
                "summary",
                "continuation",
                "other"
            ],
            "title": "FollowUpCategory",
            "type": "string"
        },
        "FollowUpQuestion": {
            "properties": {
                "category": {
                    "$ref": "#/$defs/FollowUpCategory",
                    "description": "The category of the follow-up question. The 'other' category should be used for questions that don't fit into the other categories."
                },
                "question": {
                    "description": "The follow-up question",
                    "title": "Question",
                    "type": "string"
                }
            },
            "required": [
                "category",
                "question"
            ],
            "title": "FollowUpQuestion",
            "type": "object"
        },
        "FollowUpQuestionsConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": {
                        "name": "AZURE_GPT_4o_2024_0806",
                        "version": "2024-08-06",
                        "provider": "AZURE",
                        "encoder_name": "o200k_base",
                        "token_limits": {
                            "token_limit_input": 128000,
                            "token_limit_output": 16384
                        },
                        "capabilities": [
                            "structured_output",
                            "function_calling",
                            "parallel_function_calling",
                            "streaming",
                            "vision"
                        ],
                        "info_cutoff_at": "2023-10-01",
                        "published_at": "2024-08-06",
                        "retirement_at": null,
                        "deprecated_at": null,
                        "retirement_text": null
                    },
                    "description": "The language model to be used for the follow-up question.",
                    "title": "Language Model"
                },
                "userPrompt": {
                    "default": "You can find below the conversation history between the user and the assistant.\n\n<conversation-history>\n{% for message in conversation_history %}\n{{message.role}}: {{message.content}}\n{% endfor %}\n</conversation-history>\n\nYou can find below some additional context that might be interesting to generate follow-up questions from:\n\n{% if additional_context %}\n<additional-context>\n{{additional_context}}\n</additional-context>\n{% endif %}\n\n{% if language %}\nGenerate the follow-up questions in {{language}} language.\nRemember that you should not repeat questions that you have seen in the conversation history.\n{% endif %}",
                    "description": "The user prompt to be used for the follow-up question.",
                    "title": "User Prompt",
                    "type": "string"
                },
                "systemPrompt": {
                    "default": "Your a helpful assistant that generates follow-up questions based on the conversation history and potentially more context. \nThe assistant is designed to respond to the user's question in a conversational manner.\nYour task is to generate follow-up questions that are likely to be asked by the user after the assistant's response.\n\nA follow-up question can be one of the following categories (not necessarily mutually exclusive):\n- Seeking clarification on the last answer from the assistant\n- Gathering additional interesting information\n- Asking for more details about the assistant's response\n\n{% if examples | length > 0 %}\nHere is some examples of follow-up questions:\n{% for example in examples %}\nExample {{loop.index}}:\n- Category: {{example.category}}\n- Question: {{example.question}}\n{% endfor %}\n{% endif %}\n\nYour task is to generate follow-up {{number_of_questions}} questions that are likely to be asked by the user after the assistant's response.\n\nYou should avoid repeating questions that you have seen in the conversation history.\nYou should take the examples as inspiration, but not copy them exactly or paraphrase them.\n\nYou should strictly follow the output schema provided below:\n{{output_schema}}",
                    "description": "The system prompt to be used for the follow-up question.",
                    "title": "System Prompt",
                    "type": "string"
                },
                "suggestionsFormat": {
                    "default": "{%if questions|length > 0%}\n<follow-up-question>\n<hr>\n<strong><em>&nbsp;&nbsp;Suggested follow-up questions:</em></strong>\n<br>\n<br>\n{%for question in questions%}\n[{{question.question}}](https://prompt={{question.encoded_uri}})\n{%endfor%}\n</follow-up-question>\n{%endif%}",
                    "description": "The suggestion format to be used for displaying the suggestions of follow-up questions.",
                    "title": "Suggestions Format",
                    "type": "string"
                },
                "examples": {
                    "default": [
                        {
                            "category": "clarification",
                            "question": "Can you clarify the meaning of 'implied volatility'?"
                        },
                        {
                            "category": "elaboration",
                            "question": "Can you explain more about how compound interest works over time?"
                        },
                        {
                            "category": "comparison",
                            "question": "How does compound interest compare to simple interest?"
                        },
                        {
                            "category": "implication",
                            "question": "If the Fed raises interest rates again, what does that mean for mortgage rates?"
                        },
                        {
                            "category": "summary",
                            "question": "Can you summarize the main points of a good retirement investment strategy?"
                        },
                        {
                            "category": "continuation",
                            "question": "What should I do after setting up my emergency fund?"
                        },
                        {
                            "category": "other",
                            "question": "Do you know any podcasts that cover personal finance topics?"
                        }
                    ],
                    "description": "The examples to be used for the follow-up question.",
                    "items": {
                        "$ref": "#/$defs/FollowUpQuestion"
                    },
                    "title": "Examples",
                    "type": "array"
                },
                "numberOfQuestions": {
                    "default": 3,
                    "description": "The number of questions to be used for the follow-up question.",
                    "minimum": 0,
                    "title": "Number Of Questions",
                    "type": "integer"
                },
                "adaptToLanguage": {
                    "default": true,
                    "description": "Whether to adapt the follow-up questions to the language of the conversation.",
                    "title": "Adapt To Language",
                    "type": "boolean"
                }
            },
            "title": "Follow Up Questions Config",
            "type": "object"
        },
        "FulltextBackendConfig": {
            "properties": {
                "backendName": {
                    "const": "fulltext",
                    "default": "fulltext",
                    "title": "Backend Name",
                    "type": "string"
                },
                "maxNumHits": {
                    "default": 5,
                    "minimum": 1,
                    "title": "Max Num Hits",
                    "type": "integer"
                }
            },
            "title": "Fulltext Backend Config",
            "type": "object"
        },
        "GoogleConfig": {
            "properties": {
                "searchEngineName": {
                    "const": "Google",
                    "default": "Google",
                    "title": "Search Engine Name",
                    "type": "string"
                },
                "fetchSize": {
                    "default": 10,
                    "description": "Number of search results to fetch",
                    "title": "Fetch Size",
                    "type": "integer"
                },
                "urlPatternBlacklist": {
                    "default": [
                        ".*\\.pdf$"
                    ],
                    "description": "List of URL patterns to blacklist",
                    "items": {
                        "type": "string"
                    },
                    "title": "Url Pattern Blacklist",
                    "type": "array"
                },
                "bannedDomains": {
                    "default": [],
                    "description": "List of banned domains",
                    "items": {
                        "type": "string"
                    },
                    "title": "Banned Domains",
                    "type": "array"
                },
                "customSearchConfig": {
                    "$ref": "#/$defs/GoogleSearchOptionalQueryParams",
                    "default": {
                        "cx": null,
                        "c2Coff": null,
                        "cr": null,
                        "exactTerms": null,
                        "excludeTerms": null,
                        "fileType": null,
                        "filter": null,
                        "gl": null,
                        "highRange": null,
                        "hl": null,
                        "hq": null,
                        "linkSite": null,
                        "lowRange": null,
                        "lr": null,
                        "orTerms": null,
                        "rights": null,
                        "safe": "active",
                        "searchType": null,
                        "siteSearch": null,
                        "siteSearchFilter": null,
                        "sort": null
                    },
                    "title": "Custom Search Config"
                }
            },
            "title": "Google Config",
            "type": "object"
        },
        "GoogleSearchOptionalQueryParams": {
            "description": "Optional Google Custom Search API query parameters.\nBased on the official Google Custom Search JSON API documentation.",
            "properties": {
                "cx": {
                    "default": null,
                    "description": "The Programmable Search Engine ID to use for this request. If not provided, the default Programmable Search Engine ID will be used.",
                    "title": "Cx",
                    "type": "string"
                },
                "c2Coff": {
                    "default": null,
                    "description": "Enables or disables Simplified and Traditional Chinese Search. 0: Enabled (default), 1: Disabled",
                    "enum": [
                        "0",
                        "1"
                    ],
                    "title": "C2Coff",
                    "type": "string"
                },
                "cr": {
                    "default": null,
                    "description": "Restricts search results to documents originating in a particular country",
                    "title": "Cr",
                    "type": "string"
                },
                "exactTerms": {
                    "default": null,
                    "description": "Identifies a phrase that all documents in the search results must contain",
                    "title": "Exact Terms",
                    "type": "string"
                },
                "excludeTerms": {
                    "default": null,
                    "description": "Identifies a word or phrase that should not appear in any documents in the search results",
                    "title": "Exclude Terms",
                    "type": "string"
                },
                "fileType": {
                    "default": null,
                    "description": "Restricts results to files of a specified extension",
                    "title": "File Type",
                    "type": "string"
                },
                "filter": {
                    "default": null,
                    "description": "Controls turning on or off the duplicate content filter. 0: Turns off, 1: Turns on",
                    "enum": [
                        "0",
                        "1"
                    ],
                    "title": "Filter",
                    "type": "string"
                },
                "gl": {
                    "default": null,
                    "description": "Geolocation of end user. Two-letter country code",
                    "title": "Gl",
                    "type": "string"
                },
                "highRange": {
                    "default": null,
                    "description": "Specifies the ending value for a search range",
                    "title": "High Range",
                    "type": "string"
                },
                "hl": {
                    "default": null,
                    "description": "Sets the user interface language",
                    "title": "Hl",
                    "type": "string"
                },
                "hq": {
                    "default": null,
                    "description": "Appends the specified query terms to the query, as if they were combined with a logical AND operator",
                    "title": "Hq",
                    "type": "string"
                },
                "linkSite": {
                    "default": null,
                    "description": "Specifies that all search results should contain a link to a particular URL",
                    "title": "Link Site",
                    "type": "string"
                },
                "lowRange": {
                    "default": null,
                    "description": "Specifies the starting value for a search range",
                    "title": "Low Range",
                    "type": "string"
                },
                "lr": {
                    "default": null,
                    "description": "Restricts the search to documents written in a particular language (e.g., lr=lang_ja)",
                    "title": "Lr",
                    "type": "string"
                },
                "orTerms": {
                    "default": null,
                    "description": "Provides additional search terms to check for in a document",
                    "title": "Or Terms",
                    "type": "string"
                },
                "rights": {
                    "default": null,
                    "description": "Filters based on licensing. Supported values include: cc_publicdomain, cc_attribute, cc_sharealike, cc_noncommercial, cc_nonderived",
                    "title": "Rights",
                    "type": "string"
                },
                "safe": {
                    "$ref": "#/$defs/Safe",
                    "default": "active",
                    "description": "Search safety level"
                },
                "searchType": {
                    "$ref": "#/$defs/SearchType",
                    "default": null,
                    "description": "Specifies the search type: image. If unspecified, results are limited to webpages",
                    "title": "Search Type"
                },
                "siteSearch": {
                    "default": null,
                    "description": "Specifies a given site which should always be included or excluded from results",
                    "title": "Site Search",
                    "type": "string"
                },
                "siteSearchFilter": {
                    "$ref": "#/$defs/SiteSearchFilter",
                    "default": null,
                    "description": "Controls whether to include or exclude results from the site named in the siteSearch parameter",
                    "title": "Site Search Filter"
                },
                "sort": {
                    "default": null,
                    "description": "The sort expression to apply to the results. Example value: date",
                    "title": "Sort",
                    "type": "string"
                }
            },
            "title": "Google Search Optional Query Params",
            "type": "object"
        },
        "HallucinationConfig": {
            "properties": {
                "enabled": {
                    "default": false,
                    "title": "Enabled",
                    "type": "boolean"
                },
                "name": {
                    "$ref": "#/$defs/EvaluationMetricName",
                    "default": "hallucination"
                },
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_1120"
                },
                "additionalLlmOptions": {
                    "additionalProperties": true,
                    "default": {},
                    "description": "Additional options to pass to the language model.",
                    "title": "Additionalllmoptions",
                    "type": "object"
                },
                "customPrompts": {
                    "additionalProperties": true,
                    "default": {
                        "systemPrompt": "\nYou will receive a question, references, a conversation between a user and an agent, and an output. \nThe output is the answer to the question. \nYour task is to evaluate if the output is fully supported by the information provided in the references and conversation, and provide explanations on your judgement in 2 sentences.\n\nUse the following entailment scale to generate a score:\n[low] - All information in output is supported by the references/conversation, or extractions from the references/conversation.\n[medium] - The output is supported by the references/conversation to some extent, but there is at least some information in the output that is not discussed in the references/conversation. For example, if an instruction asks about two concepts and the references/conversation only discusses either of them, it should be considered a [medium] hallucination level.\n[high] - The output contains information that is not part of the references/conversation, is unrelated to the references/conversation, or contradicts the references/conversation.\n\nMake sure to not use any external information/knowledge to judge whether the output is true or not. Only check whether the output is supported by the references/conversation, and not whether the output is correct or not. Also do not evaluate if the references/conversation contain further information that is not part of the output but could be relevant to the question. If the output mentions a plot or chart, ignore this information in your evaluation.\n\nYour answer must be in JSON format:\n{\n \"reason\": Your explanation of your judgement of the evaluation,\n \"value\": decision, must be one of the following: [\"high\", \"medium\", \"low\"]\n}                                                  \n",
                        "userPrompt": "\nHere is the data:\n\nInput:\n'''\n$input_text\n'''\n\nReferences:\n'''\n$contexts_text\n'''\n\nConversation:\n'''\n$history_messages_text\n'''\n\nOutput:\n'''\n$output_text\n'''\n\nAnswer as JSON:\n",
                        "systemPromptDefault": "\nYou will receive a question and an output. \nThe output is the answer to the question. \nThe situation is that no references could be found to answer the question. Your task is to evaluate if the output contains any information to answer the question,\nand provide a short explanations of your reasoning in 2 sentences. Also mention in your explanation that no references were provided to answer the question.\n\nUse the following entailment scale to generate a score:\n[low] - The output does not contain any information to answer the question.\n[medium] - The output contains some information to answer the question, but does not answer the question entirely. \n[high] - The output answers the question.\n\nIt is not considered an answer when the output relates to the questions subject. Make sure to not use any external information/knowledge to judge whether the output is true or not. Only check that the output does not answer the question, and not whether the output is correct or not.\nYour answer must be in JSON format:\n{\n \"reason\": Your explanation of your reasoning of the evaluation,\n \"value\": decision, must be one of the following: [\"low\", \"medium\", \"high\"]\n}\n",
                        "userPromptDefault": "                                                  \nHere is the data:\n\nInput:\n'''\n$input_text\n'''\n\nOutput:\n'''\n$output_text\n'''\n\nAnswer as JSON:\n"
                    },
                    "title": "Customprompts",
                    "type": "object"
                },
                "scoreToLabel": {
                    "additionalProperties": true,
                    "default": {
                        "LOW": "GREEN",
                        "MEDIUM": "YELLOW",
                        "HIGH": "RED"
                    },
                    "title": "Scoretolabel",
                    "type": "object"
                },
                "scoreToTitle": {
                    "additionalProperties": true,
                    "default": {
                        "LOW": "No Hallucination Detected",
                        "MEDIUM": "Hallucination Warning",
                        "HIGH": "High Hallucination"
                    },
                    "title": "Scoretotitle",
                    "type": "object"
                }
            },
            "title": "HallucinationConfig",
            "type": "object"
        },
        "HistoryReductionConfig": {
            "properties": {
                "percentOfMaxTokens": {
                    "default": 0.8,
                    "title": "Percent Of Max Tokens",
                    "type": "number"
                }
            },
            "title": "History Reduction Config",
            "type": "object"
        },
        "ImageContentConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_1120",
                    "title": "Language Model"
                },
                "additionalLlmOptions": {
                    "additionalProperties": true,
                    "default": {},
                    "description": "Additional options to pass to the language model.",
                    "title": "Additional Llm Options",
                    "type": "object"
                }
            },
            "title": "Image Content Config",
            "type": "object"
        },
        "InsightsExtractionToolConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_0806",
                    "description": "The language model to use for the insights extraction. Must support structured output.",
                    "title": "Language Model"
                },
                "systemPromptTemplate": {
                    "default": "Extract insights from a given document that are specifically relevant to the provided category.\n\nCarefully analyze the document to identify information that aligns with the specified category, ensuring relevance and value.\n\n# Steps\n\n1. **Understand the Document**: Thoroughly read and comprehend the content of the provided document.\n2. **Identify Relevant Information**: Focus on pinpointing key information and insights that align with the specified category. \n3. **Categorize Insights**: Extract insights that directly pertain to the given category and enhance understanding of that category.\n\n# Notes\n\n- Emphasize relevance to the category, avoiding unrelated information.\n- Be precise in wording to maintain clarity and depth of each insight.\n- Use emojis to indicate the trends of the insights.\n- Use the following emojis to indicate the trends: \u2b06\ufe0f for increasing, \u2b07\ufe0f for decreasing, \u2194\ufe0f for stable.\n- Use bold text to highlight KPIs and important metrics.\n\nList of insights categories:\n- ${insights_list}\n",
                    "description": "The system prompt template used for extracting insights from earning call transcripts",
                    "title": "System Prompt Template",
                    "type": "string"
                },
                "userPromptTemplate": {
                    "default": "\n# Documents\n```\n${chunk}\n```\n",
                    "description": "The user prompt template used for extracting insights from earning call transcripts",
                    "title": "User Prompt Template",
                    "type": "string"
                },
                "insightsToBeExtractedFromEarningCall": {
                    "default": [
                        "Revenue performance and trends",
                        "Profitability metrics (gross margin, operating margin, net income)",
                        "Earnings per share (EPS) and its growth or decline",
                        "Guidance and future outlook (revenue, EPS, market trends)",
                        "Cost and expense management strategies",
                        "Segment performance (if applicable: by geography, product line, etc.)",
                        "Operational updates (product launches, expansion plans, M&A activity)",
                        "Market conditions and competitive landscape insights",
                        "Management's strategic priorities and focus areas",
                        "Cash flow and liquidity details",
                        "Debt and capital structure updates",
                        "Shareholder returns (dividends, share buybacks)",
                        "Risks and challenges faced by the company",
                        "Customer behavior and demand trends",
                        "Supply chain and operational efficiency updates",
                        "Technology or innovation highlights",
                        "Regulatory and compliance updates",
                        "ESG (Environmental, Social, Governance) initiatives and achievements",
                        "Key questions and answers from analysts (Q&A section)"
                    ],
                    "description": "List of insights that should be extracted from the earning call transcripts",
                    "items": {
                        "type": "string"
                    },
                    "title": "Insights To Be Extracted From Earning Call",
                    "type": "array"
                },
                "maxChunksPerCall": {
                    "default": 10,
                    "description": "Maximum number of chunks per call",
                    "title": "Max Chunks Per Call",
                    "type": "integer"
                },
                "defaultMaxTokensPerCall": {
                    "default": 4096,
                    "description": "Default maximum number of tokens allowed if model limits are not specified",
                    "title": "Default Max Tokens Per Call",
                    "type": "integer"
                }
            },
            "title": "Insights Extraction Tool Config",
            "type": "object"
        },
        "InternalSearchConfig": {
            "properties": {
                "searchType": {
                    "$ref": "#/$defs/ContentSearchType",
                    "default": "COMBINED",
                    "description": "The type of search to perform. Two possible values: `COMBINED` or `VECTOR`.",
                    "title": "Search Type"
                },
                "maxTokensForSources": {
                    "default": 10000,
                    "description": "The maximum number of tokens to use for the sources.",
                    "title": "Max Tokens For Sources",
                    "type": "integer"
                },
                "scopeIds": {
                    "default": null,
                    "description": "The scope ids to use for the search.",
                    "items": {
                        "type": "string"
                    },
                    "title": "Scope Ids",
                    "type": "array"
                },
                "scopeToChatOnUpload": {
                    "default": false,
                    "description": "Whether to scope the search should be limited to files uploaded within the chat session when uploaded files are present.",
                    "title": "Scope To Chat On Upload",
                    "type": "boolean"
                },
                "chunkedSources": {
                    "default": true,
                    "description": "Whether each chunk is added as an individual source in the final LLM prompt. If set to False, all chunks from the same document are combined into a single source.",
                    "title": "Chunked Sources",
                    "type": "boolean"
                },
                "rerankerConfig": {
                    "$ref": "#/$defs/ContentRerankerConfig",
                    "default": null,
                    "description": "The reranker config to use for the search.",
                    "title": "Reranker Config"
                },
                "ftsSearchLanguage": {
                    "default": "english",
                    "description": "The language to use for the search.",
                    "title": "Search Language",
                    "type": "string"
                },
                "limit": {
                    "default": 50,
                    "description": "The limit of chunks to return.",
                    "title": "Limit",
                    "type": "integer"
                },
                "chunkRelevancySortConfig": {
                    "$ref": "#/$defs/ChunkRelevancySortConfig",
                    "description": "The chunk relevancy sort config to use for the search.",
                    "title": "Chunk Relevancy Sort Config"
                },
                "chatOnly": {
                    "default": false,
                    "description": "Whether to only chat on the upload.",
                    "title": "Chat Only",
                    "type": "boolean"
                },
                "toolDescription": {
                    "default": "Search in the company knowledge base for information on policies, procedures, benefits, groups, financial information or specific people. This should be your go-to tool if no other tools are applicable.",
                    "description": "Tool description.",
                    "title": "Tool Description",
                    "type": "string"
                },
                "paramDescriptionSearchString": {
                    "default": "An expanded term that is optimized for vector and full text search based on the users query it must be in english",
                    "description": "`search_string` parameter description.",
                    "title": "Param Description Search String",
                    "type": "string"
                },
                "paramDescriptionLanguage": {
                    "default": "The language that the user was the query in",
                    "description": "`language` parameter description.",
                    "title": "Param Description Language",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "You can use the InternalSearch tool to access internal company documentations, including information on policies, procedures, benefits, groups, financial details, and specific individuals. If this tool can help answer your question, feel free to use it to search the internal knowledge base for more information. If possible always try to get information from the internal knowledge base with the InternalSearch tool before using other tools.",
                    "description": "Tool description for the system prompt.",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "",
                    "description": "Tool format information for the system prompt.",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "evaluationCheckList": {
                    "default": [
                        "hallucination"
                    ],
                    "description": "The list of evaluation metrics to check.",
                    "items": {
                        "$ref": "#/$defs/EvaluationMetricName"
                    },
                    "title": "Evaluation Check List",
                    "type": "array"
                },
                "experimentalFeatures": {
                    "$ref": "#/$defs/ExperimentalFeatures",
                    "default": {
                        "fullSourcesSerializeDump": false
                    }
                },
                "sourceFormatConfig": {
                    "$ref": "#/$defs/SourceFormatConfig",
                    "default": {
                        "sourceTemplate": "<source${index}>${document}${info}${text}</source${index}>",
                        "sections": {
                            "document": "<|document|>{}<|/document|>\n",
                            "info": "<|info|>{}<|/info|>\n"
                        }
                    }
                }
            },
            "title": "Internal Search Config",
            "type": "object"
        },
        "InvestmentProposalToolConfig": {
            "properties": {
                "dataExtractorConfig": {
                    "$ref": "#/$defs/StructuredOutputDataExtractorConfig",
                    "default": {
                        "languageModel": "AZURE_GPT_4o_2024_0806",
                        "structuredOutputEnforceSchema": false,
                        "systemPromptTemplate": "You are a thorough and accurate expert in data processing.\n\nYou will be given some text and an output schema, describing what needs to be extracted from the text.\nYou will need to extract the data from the text and return it in the output schema.",
                        "userPromptTemplate": "Here is the text to extract data from:\n{{ text }}\n\nPlease thoroughly extract the data from the text and return it in the output schema."
                    },
                    "title": "Data Extractor Config"
                },
                "plotConfig": {
                    "$ref": "#/$defs/TickerPlotRendererConfig",
                    "default": {
                        "name": "ticker_plot",
                        "start_date": "2025-01-01",
                        "period": "PT30M",
                        "plotly_config": {
                            "filenamePrefix": "stock_ticker_history",
                            "height": 500,
                            "imageFormat": "jpeg",
                            "metricToDisplayName": {
                                "Close": "Close",
                                "Dividend Yield": "Dividend Yield",
                                "High": "High",
                                "Market Cap": "Market Cap",
                                "Open": "Open",
                                "Price Earnings Ratio": "P/E Ratio",
                                "Volatility 30 Days": "Volatility 30 Days",
                                "Volume": "Volume",
                                "Year High": "Year High",
                                "Year Low": "Year Low"
                            },
                            "metricsNumCols": 3,
                            "name": "plotly",
                            "numXticks": 10,
                            "scale": 4.0,
                            "scopeId": "<SCOPE_ID_PLACEHOLDER>",
                            "template": "plotly_dark",
                            "width": 850
                        },
                        "width_template_inches": 6.0,
                        "height_template_inches": 3.5,
                        "ticker_field_name": "ticker",
                        "instrument_type_field_name": "instrument_type"
                    },
                    "title": "Plot Config"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "This tool can be used to generate an investment proposal document for a certain instrument",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolDescription": {
                    "default": "This tool can be used to generate an investment proposal document for a certain instrument",
                    "title": "Tool Description",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "Always reference the generated document in your response (with [sourceX] and NO other markdown formatting) so that the user can download it.\nExample: The investment proposal was successfully generated and is available at: investment_proposal_apple.docx [sourceX].\nDO NOT ADD ANYTHING ELSE TO THE RESPONSE.",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "toolFormatReminderForUserPrompt": {
                    "default": "Remember to reference the generated document in your response (with [sourceX] and NO other markdown formatting) so that the user can download it.\nExample: The investment proposal was successfully generated and is available at: investment_proposal_apple.docx [sourceX].\nDO NOT ADD ANYTHING ELSE TO THE RESPONSE.",
                    "title": "Tool Format Reminder For User Prompt",
                    "type": "string"
                },
                "historyReductionConfig": {
                    "$ref": "#/$defs/HistoryReductionConfig",
                    "default": {
                        "percentOfMaxTokens": 0.8
                    }
                },
                "uploadConfig": {
                    "$ref": "#/$defs/UploadConfig",
                    "default": {
                        "skipIngestion": false,
                        "uploadToChat": true,
                        "uploadScopeId": "<SCOPE_ID_PLACEHOLDER>",
                        "uploadedFilenamePrefix": "investment_proposal"
                    }
                }
            },
            "title": "Investment Proposal Tool Config",
            "type": "object"
        },
        "KnowledgeBaseDataSourceConfig": {
            "properties": {
                "name": {
                    "const": "knowledge_base",
                    "default": "knowledge_base",
                    "title": "Name",
                    "type": "string"
                },
                "scopeId": {
                    "description": "Scope id where the file with the table data is stored",
                    "title": "Scope Id",
                    "type": "string"
                },
                "fileName": {
                    "description": "The name of the file in the knowledge center containing the table data",
                    "title": "File Name",
                    "type": "string"
                },
                "csvDelimiter": {
                    "default": ",",
                    "description": "Delimiter used to separate the values in the CSV file",
                    "title": "Csv Delimiter",
                    "type": "string"
                }
            },
            "required": [
                "scopeId",
                "fileName"
            ],
            "title": "Knowledge Base Data Source Config",
            "type": "object"
        },
        "LanguageModelInfo": {
            "properties": {
                "name": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "type": "string"
                        }
                    ],
                    "title": "Name"
                },
                "version": {
                    "title": "Version",
                    "type": "string"
                },
                "provider": {
                    "$ref": "#/$defs/LanguageModelProvider"
                },
                "encoder_name": {
                    "$ref": "#/$defs/EncoderName",
                    "default": "cl100k_base"
                },
                "token_limits": {
                    "$ref": "#/$defs/LanguageModelTokenLimits",
                    "default": {
                        "token_limit_input": 7000,
                        "token_limit_output": 1000
                    }
                },
                "capabilities": {
                    "default": [
                        "streaming"
                    ],
                    "items": {
                        "$ref": "#/$defs/ModelCapabilities"
                    },
                    "title": "Capabilities",
                    "type": "array"
                },
                "info_cutoff_at": {
                    "default": null,
                    "format": "date",
                    "title": "Info Cutoff At",
                    "type": "string"
                },
                "published_at": {
                    "default": null,
                    "format": "date",
                    "title": "Published At",
                    "type": "string"
                },
                "retirement_at": {
                    "default": null,
                    "format": "date",
                    "title": "Retirement At",
                    "type": "string"
                },
                "deprecated_at": {
                    "default": null,
                    "format": "date",
                    "title": "Deprecated At",
                    "type": "string"
                },
                "retirement_text": {
                    "default": null,
                    "title": "Retirement Text",
                    "type": "string"
                }
            },
            "required": [
                "name",
                "version",
                "provider"
            ],
            "title": "LanguageModelInfo",
            "type": "object"
        },
        "LanguageModelName": {
            "enum": [
                "AZURE_GPT_35_TURBO_0125",
                "AZURE_GPT_4_0613",
                "AZURE_GPT_4_32K_0613",
                "AZURE_GPT_4_TURBO_2024_0409",
                "AZURE_GPT_4o_2024_0513",
                "AZURE_GPT_4o_2024_0806",
                "AZURE_GPT_4o_2024_1120",
                "AZURE_GPT_4o_MINI_2024_0718",
                "AZURE_o1_MINI_2024_0912",
                "AZURE_o1_2024_1217",
                "AZURE_o3_MINI_2025_0131",
                "AZURE_GPT_45_PREVIEW_2025_0227",
                "AZURE_GPT_41_2025_0414",
                "AZURE_GPT_41_MINI_2025_0414",
                "AZURE_GPT_41_NANO_2025_0414",
                "AZURE_o3_2025_0416",
                "AZURE_o4_MINI_2025_0416",
                "litellm:anthropic-claude-3-7-sonnet",
                "litellm:anthropic-claude-3-7-sonnet-thinking",
                "litellm:anthropic-claude-sonnet-4",
                "litellm:anthropic-claude-opus-4",
                "litellm:gemini-2-0-flash",
                "litellm:gemini-2-5-flash",
                "litellm:gemini-2-5-flash-lite-preview-06-17",
                "litellm:gemini-2-5-flash-preview-04-17",
                "litellm:gemini-2-5-flash-preview-05-20",
                "litellm:gemini-2-5-pro",
                "litellm:gemini-2-5-pro-exp-03-25",
                "litellm:gemini-2-5-pro-preview-06-05"
            ],
            "title": "LanguageModelName",
            "type": "string"
        },
        "LanguageModelProvider": {
            "enum": [
                "AZURE",
                "CUSTOM",
                "LITELLM"
            ],
            "title": "LanguageModelProvider",
            "type": "string"
        },
        "LanguageModelTokenLimits": {
            "properties": {
                "token_limit_input": {
                    "title": "Token Limit Input",
                    "type": "integer"
                },
                "token_limit_output": {
                    "title": "Token Limit Output",
                    "type": "integer"
                }
            },
            "required": [
                "token_limit_input",
                "token_limit_output"
            ],
            "title": "LanguageModelTokenLimits",
            "type": "object"
        },
        "LevenshteinBackendConfig": {
            "properties": {
                "backendName": {
                    "const": "levenshtein",
                    "default": "levenshtein",
                    "title": "Backend Name",
                    "type": "string"
                },
                "maxNumHits": {
                    "default": 5,
                    "minimum": 1,
                    "title": "Max Num Hits",
                    "type": "integer"
                },
                "maxDistance": {
                    "anyOf": [
                        {
                            "minimum": 0,
                            "type": "integer"
                        },
                        {
                            "type": "null"
                        }
                    ],
                    "default": null,
                    "title": "Max Distance"
                }
            },
            "title": "Levenshtein Backend Config",
            "type": "object"
        },
        "LineChartConfig": {
            "properties": {
                "colorScheme": {
                    "default": [
                        "#95D7D1",
                        "#3EB2D2",
                        "#275C5E",
                        "#225168",
                        "#A9A68E",
                        "#605A4C"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "title": "Color Scheme",
                    "type": "array"
                },
                "fontSize": {
                    "default": 12,
                    "title": "Font Size",
                    "type": "integer"
                },
                "fontColor": {
                    "default": "#1F1F1F",
                    "title": "Font Color",
                    "type": "string"
                },
                "width": {
                    "default": 850,
                    "title": "Width",
                    "type": "integer"
                },
                "height": {
                    "default": 400,
                    "title": "Height",
                    "type": "integer"
                },
                "hole": {
                    "default": 0.3,
                    "title": "Hole",
                    "type": "number"
                },
                "scopeId": {
                    "default": "",
                    "title": "Scope Id",
                    "type": "string"
                }
            },
            "title": "Line Chart Config",
            "type": "object"
        },
        "LoopAgentTokenLimitsConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_1120",
                    "title": "Language Model"
                },
                "percentOfMaxTokensForHistory": {
                    "default": 0.2,
                    "description": "The fraction of the max input tokens that will be reserved for the history.",
                    "exclusiveMaximum": 1.0,
                    "minimum": 0.0,
                    "title": "Percent Of Max Tokens For History",
                    "type": "number"
                }
            },
            "title": "Loop Agent Token Limits Config",
            "type": "object"
        },
        "MarkdownGeneratorConfig": {
            "properties": {
                "options": {
                    "additionalProperties": true,
                    "default": {
                        "ignore_links": true,
                        "ignore_emphasis": true,
                        "ignore_images": true
                    },
                    "description": "The options for the markdown generator",
                    "title": "Options",
                    "type": "object"
                }
            },
            "title": "Markdown Generator Config",
            "type": "object"
        },
        "MetricName": {
            "enum": [
                "Open",
                "High",
                "Close",
                "Market Cap",
                "Price Earnings Ratio",
                "Volume",
                "Year High",
                "Year Low",
                "Dividend Yield",
                "Volatility 30 Days"
            ],
            "title": "MetricName",
            "type": "string"
        },
        "ModelCapabilities": {
            "enum": [
                "function_calling",
                "parallel_function_calling",
                "reproducible_output",
                "structured_output",
                "vision",
                "streaming",
                "reasoning"
            ],
            "title": "ModelCapabilities",
            "type": "string"
        },
        "NextTickerPlotConfig": {
            "properties": {
                "name": {
                    "const": "next",
                    "default": "next",
                    "title": "Name",
                    "type": "string"
                }
            },
            "title": "Next Ticker Plot Config",
            "type": "object"
        },
        "NoCrawlerConfig": {
            "properties": {
                "crawlerType": {
                    "const": "NoCrawler",
                    "default": "NoCrawler",
                    "title": "Crawler Type",
                    "type": "string"
                },
                "semaphoreCount": {
                    "default": 10,
                    "description": "The number of concurrent requests to make to the same domain.",
                    "title": "Semaphore Count",
                    "type": "integer"
                },
                "timeout": {
                    "default": 5.0,
                    "description": "The timeout for the requests in seconds. This applies to the overall request timeout including connect, read, and write operations.",
                    "title": "Timeout",
                    "type": "number"
                },
                "cleaningStrategyConfig": {
                    "$ref": "#/$defs/CleaningStrategyConfig",
                    "description": "The cleaning strategy configuration."
                }
            },
            "title": "No Crawler Config",
            "type": "object"
        },
        "PieChartConfig": {
            "properties": {
                "colorScheme": {
                    "default": [
                        "#95D7D1",
                        "#3EB2D2",
                        "#275C5E",
                        "#225168",
                        "#A9A68E",
                        "#605A4C"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "title": "Color Scheme",
                    "type": "array"
                },
                "fontSize": {
                    "default": 12,
                    "title": "Font Size",
                    "type": "integer"
                },
                "fontColor": {
                    "default": "#1F1F1F",
                    "title": "Font Color",
                    "type": "string"
                },
                "width": {
                    "default": 850,
                    "title": "Width",
                    "type": "integer"
                },
                "height": {
                    "default": 400,
                    "title": "Height",
                    "type": "integer"
                },
                "hole": {
                    "default": 0.3,
                    "title": "Hole",
                    "type": "number"
                },
                "scopeId": {
                    "default": "",
                    "title": "Scope Id",
                    "type": "string"
                }
            },
            "title": "Pie Chart Config",
            "type": "object"
        },
        "PlotlyTickerPlotConfig": {
            "properties": {
                "name": {
                    "const": "plotly",
                    "default": "plotly",
                    "title": "Name",
                    "type": "string"
                },
                "width": {
                    "default": 850,
                    "title": "Width",
                    "type": "integer"
                },
                "height": {
                    "default": 500,
                    "title": "Height",
                    "type": "integer"
                },
                "scale": {
                    "default": 4,
                    "title": "Scale",
                    "type": "number"
                },
                "numXticks": {
                    "default": 10,
                    "title": "Num Xticks",
                    "type": "integer"
                },
                "metricsNumCols": {
                    "default": 3,
                    "title": "Metrics Num Cols",
                    "type": "integer"
                },
                "scopeId": {
                    "default": "<SCOPE_ID_PLACEHOLDER>",
                    "title": "Scope Id",
                    "type": "string"
                },
                "filenamePrefix": {
                    "default": "stock_ticker_history",
                    "title": "Filename Prefix",
                    "type": "string"
                },
                "imageFormat": {
                    "default": "jpeg",
                    "enum": [
                        "jpeg",
                        "png"
                    ],
                    "title": "Image Format",
                    "type": "string"
                },
                "template": {
                    "default": "plotly_dark",
                    "enum": [
                        "ggplot2",
                        "seaborn",
                        "simple_white",
                        "plotly",
                        "plotly_white",
                        "plotly_dark",
                        "presentation",
                        "xgridoff",
                        "ygridoff",
                        "gridon",
                        "none"
                    ],
                    "title": "Template",
                    "type": "string"
                },
                "metricToDisplayName": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": {
                        "Open": "Open",
                        "High": "High",
                        "Close": "Close",
                        "Market Cap": "Market Cap",
                        "Price Earnings Ratio": "P/E Ratio",
                        "Volume": "Volume",
                        "Year High": "Year High",
                        "Year Low": "Year Low",
                        "Dividend Yield": "Dividend Yield",
                        "Volatility 30 Days": "Volatility 30 Days"
                    },
                    "propertyNames": {
                        "$ref": "#/$defs/MetricName"
                    },
                    "title": "Metric To Display Name",
                    "type": "object"
                }
            },
            "title": "Plotly Ticker Plot Config",
            "type": "object"
        },
        "PruningContentFilterConfig": {
            "properties": {
                "enabled": {
                    "default": true,
                    "description": "Whether to enable the content filter",
                    "title": "Enabled",
                    "type": "boolean"
                },
                "threshold": {
                    "default": 0.5,
                    "description": "The threshold for the content filter",
                    "title": "Threshold",
                    "type": "number"
                },
                "thresholdType": {
                    "default": "fixed",
                    "description": "The type of threshold",
                    "enum": [
                        "fixed",
                        "dynamic"
                    ],
                    "title": "Threshold Type",
                    "type": "string"
                },
                "minWordThreshold": {
                    "default": 10,
                    "description": "The minimum number of words to keep",
                    "title": "Min Word Threshold",
                    "type": "integer"
                }
            },
            "title": "Pruning Content Filter Config",
            "type": "object"
        },
        "QuartrEventsToolConfig": {
            "properties": {
                "toolDescription": {
                    "default": "This tool can be used to load/ingest earning calls data for a specific company ticker and multiple year/quarter pairs.",
                    "description": "The description of the tool.",
                    "title": "Tool Description",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "This tool can be used to load/ingest earning calls data for a specific company ticker and multiple year/quarter pairs.",
                    "description": "The description of the tool for the system prompt.",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "",
                    "description": "The format information of the tool for the system prompt.",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "timeoutPerEvent": {
                    "default": 180,
                    "description": "The maximum time in seconds allowed for processing each ingestion event. Increasing this value provides more time for long transcripts to be processed, but extends overall execution duration. Consider balancing between reliability and performance when adjusting this value.",
                    "title": "Timeout Per Event",
                    "type": "integer"
                },
                "maxConcurrentRequests": {
                    "default": 4,
                    "description": "The maximum number of concurrent ingestion pipelines that can be run at the same time. Higher values allow more pipelines to be run simultaneously, increasing throughput but also increasing the load on the system and potentially causing rate limiting issues.",
                    "minimum": 1,
                    "title": "Max Concurrent Requests",
                    "type": "integer"
                },
                "ingestionConfig": {
                    "$ref": "#/$defs/QuartrIngestionToolConfig",
                    "description": "The ingestion config.",
                    "title": "Ingestion Config"
                },
                "insightsExtractionConfig": {
                    "$ref": "#/$defs/InsightsExtractionToolConfig",
                    "description": "The insights extraction config.",
                    "title": "Insights Extraction Config"
                },
                "tickerExtractionConfig": {
                    "$ref": "#/$defs/TickerExtractionConfig",
                    "description": "The ticker extraction config."
                },
                "maxFetchIteration": {
                    "default": 20,
                    "description": "The maximum number of pagination iterations when fetching data from the Quartr API. Higher values allow fetching more data but increase execution time.",
                    "minimum": 1,
                    "title": "Max Fetch Iteration",
                    "type": "integer"
                }
            },
            "title": "Quartr Events Tool Config",
            "type": "object"
        },
        "QuartrIngestionToolConfig": {
            "properties": {
                "docxGeneratorConfig": {
                    "$ref": "#/$defs/DocxGeneratorConfig",
                    "default": {
                        "uploadSuffix": ".docx",
                        "uploadScopeId": "dummy",
                        "uploadToChat": true,
                        "templateContentId": null,
                        "templateName": "template.docx",
                        "templateScopeId": null,
                        "templateFields": {
                            "date": "17/07/2025",
                            "document_title": "Template Document"
                        },
                        "skipIngestion": false
                    }
                },
                "documentsIds": {
                    "default": [
                        15,
                        22,
                        10,
                        5
                    ],
                    "description": "Documents that will be referenced during the ingestion process",
                    "items": {
                        "$ref": "#/$defs/DocumentType"
                    },
                    "title": "Documents Ids",
                    "type": "array"
                },
                "documentsToBeIngested": {
                    "default": [],
                    "description": "Documents that will be ingested to the knowledge base. Must be a subset of documentsIds",
                    "items": {
                        "$ref": "#/$defs/DocumentType"
                    },
                    "title": "Documents To Be Ingested",
                    "type": "array"
                }
            },
            "title": "Quartr Ingestion Tool Config",
            "type": "object"
        },
        "QueryRefinementConfig": {
            "properties": {
                "enabled": {
                    "default": true,
                    "description": "Whether to enable the refined query",
                    "title": "Enabled",
                    "type": "boolean"
                },
                "systemPrompt": {
                    "default": "You're task consist of a query for a search engine.\n\n** Refine the query Guidelines **\n- The query should be a string that does not exceed 6 key words.\n- Never include temporal information in the refined query. There is a separate field for this purpose.\n- You may add the additional advanced syntax when relevant to refine the results:\n- Use quotes `\"...\"` for exact words (avoid doing it for phrases as it will dramatically reduce the number of results).\n- Use `-word` to exclude terms.\n- Use `site:domain.com` to restrict to a site.\n- Use `intitle:`, `inurl:` to target title/URL.\n- Use `OR` for alternatives, `*` as a wildcard.\n- Use `..` for number ranges (e.g., 2010..2020).\n- Use `AROUND(N)` to find terms close together.\n- Use `define:word` for definitions.\n- Combine operators for powerful filtering.\n\n** IMPORTANT **\n- You should not use any date restriction in the refined query.",
                    "description": "The system prompt to refine the query",
                    "title": "System Prompt",
                    "type": "string"
                }
            },
            "title": "Query Refinement Config",
            "type": "object"
        },
        "RateLimiterConfig": {
            "properties": {
                "baseDelay": {
                    "default": [
                        0.5,
                        1.0
                    ],
                    "description": "The range for a random delay (in seconds) between consecutive requests to the same domain.",
                    "maxItems": 2,
                    "minItems": 2,
                    "prefixItems": [
                        {
                            "type": "number"
                        },
                        {
                            "type": "number"
                        }
                    ],
                    "title": "Base Delay",
                    "type": "array"
                },
                "maxDelay": {
                    "default": 1.0,
                    "description": "The maximum allowable delay when rate-limiting errors occur",
                    "title": "Max Delay",
                    "type": "number"
                },
                "maxRetries": {
                    "default": 0,
                    "description": "The maximum number of retries to make when rate-limiting errors occur",
                    "title": "Max Retries",
                    "type": "integer"
                },
                "rateLimitCodes": {
                    "default": [
                        429,
                        503
                    ],
                    "description": "The HTTP status codes that indicate rate-limiting errors",
                    "items": {
                        "type": "integer"
                    },
                    "title": "Rate Limit Codes",
                    "type": "array"
                }
            },
            "title": "Rate Limiter Config",
            "type": "object"
        },
        "ReadContentToolConfig": {
            "properties": {
                "fullSourcesSerializeDump": {
                    "default": false,
                    "description": "Whether to include the full source object in the tool response. If True, includes the full Source object. If False, uses the old format with only source_number and content.",
                    "title": "Full Sources Serialize Dump",
                    "type": "boolean"
                },
                "evaluationCheckList": {
                    "default": [
                        "hallucination"
                    ],
                    "description": "The list of evaluation metrics to check.",
                    "items": {
                        "$ref": "#/$defs/EvaluationMetricName"
                    },
                    "title": "Evaluation Check List",
                    "type": "array"
                },
                "languageModelToolCallDescription": {
                    "default": "Never Select this tool! This tool cannot be choosen directly, we will force it to be called when the user uploads content to make it available",
                    "description": "The description to use for the tool call in the language model",
                    "title": "Language Model Tool Call Description",
                    "type": "string"
                }
            },
            "title": "Read Content Tool Config",
            "type": "object"
        },
        "ReferenceManagerConfig": {
            "description": "Configuration settings for the ReferenceManagerService.\n\nAttributes:\n    max_reference_age: Maximum number of interactions before a reference is removed\n    replace_old_references: String to replace old references with, or None to remove them\n    include_images: Whether to include images in messages\n    file_content_serialization_type: How to serialize file content",
            "properties": {
                "toolNamesToInclude": {
                    "default": [
                        "WebSearch",
                        "InternalSearch"
                    ],
                    "description": "List of tool names to be parsed by reference manager",
                    "items": {
                        "type": "string"
                    },
                    "title": "Tool Names To Include",
                    "type": "array"
                },
                "systemMessageToolSelectionCitationAppendixReferenceManager": {
                    "default": "IT IS VERY IMPORTANT TO FOLLOW THESE GUIDELINES!!\nNEVER CITE A source_number THAT YOU DON'T SEE IN THE TOOL CALL RESPONSE!!!\nThe source_number in old assistant messages are no longer valid.\nEXAMPLE: If you see [source34] and [source35] in the assistant message, you can't use [source34] again in the next assistant message, this has to be the number you find in the message with role 'tool'. \nBE AWARE:All tool calls have been filtered to remove uncited sources. Tool calls return much more data than you see",
                    "description": "System message to be added to the tool selection citation appendix",
                    "title": "System Message Tool Selection Citation Appendix Reference Manager",
                    "type": "string"
                }
            },
            "title": "Reference Manager Config",
            "type": "object"
        },
        "SQLGenerationConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": {
                        "name": "AZURE_GPT_4o_2024_1120",
                        "version": "2024-11-20",
                        "provider": "AZURE",
                        "encoder_name": "o200k_base",
                        "token_limits": {
                            "token_limit_input": 128000,
                            "token_limit_output": 16384
                        },
                        "capabilities": [
                            "structured_output",
                            "function_calling",
                            "parallel_function_calling",
                            "streaming",
                            "vision"
                        ],
                        "info_cutoff_at": "2023-10-01",
                        "published_at": "2024-11-20",
                        "retirement_at": null,
                        "deprecated_at": null,
                        "retirement_text": null
                    },
                    "description": "Language model to use for SQL query generation.",
                    "title": "Language Model"
                },
                "additionalLlmOptions": {
                    "additionalProperties": true,
                    "default": {},
                    "description": "Additional options to pass to the language model.",
                    "title": "Additional Llm Options",
                    "type": "object"
                },
                "queryGenerationMaxRetries": {
                    "default": 2,
                    "description": "Maximum number of retries to perform if the SQL query generation fails due to parsing errors.",
                    "title": "Query Generation Max Retries",
                    "type": "integer"
                },
                "fuzzySearchEnabled": {
                    "default": false,
                    "description": "Whether fuzzy search is enabled for the query generation. This is only used for constructing the prompt.",
                    "title": "Fuzzy Search Enabled",
                    "type": "boolean"
                },
                "numRetriesOnQueryGenerationFailure": {
                    "default": 1,
                    "description": "Number of retries to perform if the SQL query generation fails due to the LLM refusal.",
                    "title": "Num Retries On Query Generation Failure",
                    "type": "integer"
                },
                "sqlLimit": {
                    "default": 5,
                    "description": "Default limit for the SQL query.",
                    "title": "Sql Limit",
                    "type": "integer"
                },
                "queryGenerationSystemMessage": {
                    "default": "You are an SQL expert.\nYour task is to understand the user's natural language question and construct an SQL query to retrieve the necessary data from the database. \n{%- if dialect is defined %} \nThe database dialect is {{ dialect }}.\n{%- endif %}\nThe current time is: {{ current_datetime }}.\n\nThe query is only related to the table of name \"{{ table_name }}\", which has the following column specification:\n{%- for column in columns %}\n    - Column: \"{{ column.name }}\"\n        - Type: {{ column.type }}\n        {%- if column.description | length > 0 %}\n        - Description: {{ column.description }}\n        {%- endif %}\n        {%- if column.example_values | length > 0 %}\n        - Example Values: \n        {%- for value in column.example_values %}\n            - '{{ value }}'\n        {%- endfor %}\n            - ... (other values)\n        {%- endif %}\n        {%- if column.distinct_values | length > 0 %}\n        - Possible Values: \n        {%- for value in column.distinct_values %}\n            - '{{ value }}'\n        {%- endfor %}\n        {%- endif %}\n        {%- if fuzzy_search_enabled %}\n        - Fuzzy Search Enabled: {{ column.fuzzy_search_enabled }}\n        {%- endif %}\n        - Unique Values: {{ column.unique }} \n        - Nullable: {{ column.nullable }}\n        - Required in SELECT clause: {{ column.required_in_select }}\n{%- endfor %}\n    \nInstructions:\n{%- set fuzzy_search_enabled_columns = columns | selectattr('fuzzy_search_enabled', '==', True) | list %}\n{%- if (fuzzy_search_enabled) and (fuzzy_search_enabled_columns | length > 0) %}\n- Columns with fuzzy search enabled used in a WHERE clause can be filtered using the special keyword ~\n  Specifically, this is used like any other comparison operator, for example:\n  SELECT \"column\", \"column_with_fuzzy_search\"\n  FROM \"table\"\n  WHERE \"column_with_fuzzy_search\" ~ 'search string';\n  This will perform a fuzzy search on the \"column_with_fuzzy_search\" column.\n  You should always make use of this capability when filtering by such columns, unless the query is specifically asking for an exact match.\n- For other text columns, you may use the \"LIKE\" operator with a '%value%' where value is a suitable search term.\n- Filtering by text columns that are not unique, don't have distinct values or don't have fuzzy search enabled should be left as a last resort\n  and performed with a LIKE comparison as explained above.\n{%- else %}\n- When filtering by text columns, you may use the \"LIKE\" operator with a '%value%' where value is a suitable search term.\n- Filtering by text columns that are not unique, don't have distinct values enabled should be left as a last resort\n  and performed with a LIKE comparison as explained above.\n{%- endif %}\n- Columns with a list of **Possible Values** can only contain those values.\n- Columns with a list of **Example Values** contain more values than the listed examples.\n- Use unique columns for filtering when possible as it yields better and more accurate results.\n- Always sanitize column and table names by surrounding them with \"\", e.g. \"table_name\" and \"column_name\".\n- IMPORTANT: When using a column in a WHERE or ORDER BY clause, you must always include it in the SELECT clause for clarity.\n- You should always limit the number of rows returned by the query to a maximum of {{ sql_limit }} rows, unless the user explicitly asks for more rows.\n\nPlease follow the following steps strictly:\n1. Carefully read the user's question and understand the user's intent.\n2. Review the column specification of the table and understand the user's question in the context of the table.\n3. Construct an SQL query to retrieve the necessary data from the database.\n4. Check again that you followed all instructions in the Instructions section above. \n5. Return the SQL query in the format specified below.\n\nOutput JSON Schema:\n{{ output_json_schema }}",
                    "description": "System message for SQL query generation.",
                    "title": "Query Generation System Message",
                    "type": "string"
                },
                "queryGenerationUserMessage": {
                    "default": "User query:\n{{ user_query }}",
                    "description": "User message for SQL query generation.",
                    "title": "Query Generation User Message",
                    "type": "string"
                }
            },
            "title": "Sql Generation Config",
            "type": "object"
        },
        "Safe": {
            "enum": [
                "active",
                "off"
            ],
            "title": "Safe",
            "type": "string"
        },
        "SearchType": {
            "enum": [
                "image"
            ],
            "title": "SearchType",
            "type": "string"
        },
        "SiteSearchFilter": {
            "enum": [
                "e",
                "i"
            ],
            "title": "SiteSearchFilter",
            "type": "string"
        },
        "SourceFormatConfig": {
            "properties": {
                "sourceTemplate": {
                    "default": "<source${index}>${document}${info}${text}</source${index}>",
                    "title": "Source Template",
                    "type": "string"
                },
                "sections": {
                    "additionalProperties": {
                        "type": "string"
                    },
                    "default": {
                        "document": "<|document|>{}<|/document|>\n",
                        "info": "<|info|>{}<|/info|>\n"
                    },
                    "title": "Sections",
                    "type": "object"
                }
            },
            "title": "Source Format Config",
            "type": "object"
        },
        "StockTickerConfig": {
            "properties": {
                "dataRetrievalConfig": {
                    "$ref": "#/$defs/StockTickerDataRetrievalConfig",
                    "default": {
                        "startDate": "2025-01-01",
                        "period": "PT30M"
                    },
                    "title": "Data Retrieval Config"
                },
                "detectionConfig": {
                    "$ref": "#/$defs/StockTickerDetectionConfig",
                    "default": {
                        "languageModel": "AZURE_GPT_35_TURBO_0125",
                        "additionalLlmOptions": {},
                        "memoryConfig": {
                            "maxChatInteractions": 3
                        }
                    },
                    "title": "Detection Config"
                },
                "plottingConfig": {
                    "default": {
                        "name": "plotly",
                        "width": 850,
                        "height": 500,
                        "scale": 4.0,
                        "numXticks": 10,
                        "metricsNumCols": 3,
                        "scopeId": "<SCOPE_ID_PLACEHOLDER>",
                        "filenamePrefix": "stock_ticker_history",
                        "imageFormat": "jpeg",
                        "template": "plotly_dark",
                        "metricToDisplayName": {
                            "Close": "Close",
                            "Dividend Yield": "Dividend Yield",
                            "High": "High",
                            "Market Cap": "Market Cap",
                            "Open": "Open",
                            "Price Earnings Ratio": "P/E Ratio",
                            "Volatility 30 Days": "Volatility 30 Days",
                            "Volume": "Volume",
                            "Year High": "Year High",
                            "Year Low": "Year Low"
                        }
                    },
                    "discriminator": {
                        "mapping": {
                            "next": "#/$defs/NextTickerPlotConfig",
                            "plotly": "#/$defs/PlotlyTickerPlotConfig"
                        },
                        "propertyName": "name"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/$defs/NextTickerPlotConfig"
                        },
                        {
                            "$ref": "#/$defs/PlotlyTickerPlotConfig"
                        }
                    ],
                    "title": "Plotting Config"
                },
                "enabled": {
                    "default": false,
                    "description": "Whether to enable stock ticker detection.",
                    "title": "Enabled",
                    "type": "boolean"
                }
            },
            "title": "Stock Ticker Config",
            "type": "object"
        },
        "StockTickerDataRetrievalConfig": {
            "description": "Configuration for the data retrieval of stock tickers.",
            "properties": {
                "startDate": {
                    "format": "date",
                    "title": "Start Date",
                    "type": "string"
                },
                "period": {
                    "default": "PT30M",
                    "format": "duration",
                    "title": "Period",
                    "type": "string"
                }
            },
            "title": "Stock Ticker Data Retrieval Config",
            "type": "object"
        },
        "StockTickerDetectionConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_35_TURBO_0125",
                    "title": "Language Model"
                },
                "additionalLlmOptions": {
                    "additionalProperties": true,
                    "default": {},
                    "description": "Additional options to pass to the language model.",
                    "title": "Additional Llm Options",
                    "type": "object"
                },
                "memoryConfig": {
                    "$ref": "#/$defs/StockTickerMemoryConfig",
                    "default": {
                        "maxChatInteractions": 3
                    },
                    "title": "Memory Config"
                }
            },
            "title": "Stock Ticker Detection Config",
            "type": "object"
        },
        "StockTickerMemoryConfig": {
            "properties": {
                "maxChatInteractions": {
                    "default": 3,
                    "title": "Max Chat Interactions",
                    "type": "integer"
                }
            },
            "title": "Stock Ticker Memory Config",
            "type": "object"
        },
        "StringColumnCleaningConfig": {
            "properties": {
                "stripWhitespace": {
                    "default": true,
                    "description": "Whether to strip whitespace from the column",
                    "title": "Strip Whitespace",
                    "type": "boolean"
                }
            },
            "title": "String Column Cleaning Config",
            "type": "object"
        },
        "StructuredOutputConfig": {
            "properties": {
                "enabled": {
                    "default": false,
                    "description": "Whether to use structured output for the evaluation.",
                    "title": "Enabled",
                    "type": "boolean"
                },
                "extract_fact_list": {
                    "default": false,
                    "description": "Whether to extract a list of relevant facts from context chunks with structured output.",
                    "title": "Extract Fact List",
                    "type": "boolean"
                },
                "reason_description": {
                    "default": "A brief explanation justifying your evaluation decision.",
                    "description": "The description of the reason field for structured output.",
                    "title": "Reason Description",
                    "type": "string"
                },
                "value_description": {
                    "default": "Assessment of how relevant the facts are to the query. Must be one of: ['low', 'medium', 'high'].",
                    "description": "The description of the value field for structured output.",
                    "title": "Value Description",
                    "type": "string"
                },
                "fact_description": {
                    "default": "A fact is an information that is directly answers the user's query. Make sure to emphasize the important information from the fact with bold text.",
                    "description": "The description of the fact field for structured output.",
                    "title": "Fact Description",
                    "type": "string"
                },
                "fact_list_description": {
                    "default": "A list of relevant facts extracted from the source that supports or answers the user's query.",
                    "description": "The description of the fact list field for structured output.",
                    "title": "Fact List Description",
                    "type": "string"
                }
            },
            "title": "StructuredOutputConfig",
            "type": "object"
        },
        "StructuredOutputDataExtractorConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_0806",
                    "title": "Language Model"
                },
                "structuredOutputEnforceSchema": {
                    "default": false,
                    "title": "Structured Output Enforce Schema",
                    "type": "boolean"
                },
                "systemPromptTemplate": {
                    "default": "You are a thorough and accurate expert in data processing.\n\nYou will be given some text and an output schema, describing what needs to be extracted from the text.\nYou will need to extract the data from the text and return it in the output schema.",
                    "title": "System Prompt Template",
                    "type": "string"
                },
                "userPromptTemplate": {
                    "default": "Here is the text to extract data from:\n{{ text }}\n\nPlease thoroughly extract the data from the text and return it in the output schema.",
                    "title": "User Prompt Template",
                    "type": "string"
                }
            },
            "title": "Structured Output Data Extractor Config",
            "type": "object"
        },
        "SummarizeWebpageConfig": {
            "properties": {
                "strategy": {
                    "const": "summarize",
                    "default": "summarize",
                    "title": "Strategy",
                    "type": "string"
                },
                "preTruncateToMaxTokens": {
                    "default": 30000,
                    "description": "Max number of tokens to truncate the page to keep before summarization",
                    "title": "Pre Truncate To Max Tokens",
                    "type": "integer"
                },
                "minTokensTriggerSummarization": {
                    "default": 5000,
                    "description": "Min number of tokens to trigger summarization",
                    "title": "Min Tokens Trigger Summarization",
                    "type": "integer"
                },
                "summarizationSystemPrompt": {
                    "default": "You are a helping assistant that generates query focused summarization of a webpage content. The summary should convey any information that is relevant to the query.",
                    "description": "The system prompt to use for summarization",
                    "title": "Summarization System Prompt",
                    "type": "string"
                }
            },
            "title": "Summarize Webpage Config",
            "type": "object"
        },
        "TableConfig": {
            "properties": {
                "name": {
                    "description": "Name of the table",
                    "title": "Name",
                    "type": "string"
                },
                "columns": {
                    "description": "Column specification of the table",
                    "items": {
                        "$ref": "#/$defs/ColumnConfig"
                    },
                    "title": "Columns",
                    "type": "array"
                },
                "dataSourceConfig": {
                    "$ref": "#/$defs/KnowledgeBaseDataSourceConfig",
                    "title": "Data Source Config"
                }
            },
            "required": [
                "name",
                "columns",
                "dataSourceConfig"
            ],
            "title": "Table Config",
            "type": "object"
        },
        "TableSearchConfig": {
            "properties": {
                "tablesConfig": {
                    "default": [],
                    "items": {
                        "$ref": "#/$defs/TableConfig"
                    },
                    "title": "Tables Config",
                    "type": "array"
                },
                "sqlGenerationConfig": {
                    "$ref": "#/$defs/SQLGenerationConfig"
                },
                "addTableNamesToToolDescription": {
                    "default": false,
                    "title": "Add Table Names To Tool Description",
                    "type": "boolean"
                },
                "addColumnNamesToToolDescription": {
                    "default": false,
                    "title": "Add Column Names To Tool Description",
                    "type": "boolean"
                },
                "toolDescription": {
                    "default": "Query in natural language a database for detailed information.",
                    "title": "Tool Description",
                    "type": "string"
                },
                "paramDescriptionTextQuery": {
                    "default": "The fully contextualized user question to query a research database. Write in a form that is explicit and detailed enough to generate the correct SQL query.Be sure to include details of anything mentioned by the user (eg. fields, limits, ordering, ...) that could be relevant. Do NOT add anything the user has not asked for in the last question or related history. This should be in the form of natural language and NOT in SQL syntax.Always mention only one table in the query.",
                    "title": "Param Description Text Query",
                    "type": "string"
                },
                "paramDescriptionTableName": {
                    "default": "The name of the table in the research database to query. Must be one of: ${table_names}. Choose the most relevant table based on the user's question.",
                    "title": "Param Description Table Name",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "Query in natural language a database for detailed information.",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "When utilizing the 'TableSearch' tool to query and retrieve information from the database, adhere to the following rules:\n1. High-Level Description:\nProvide a concise, high-level summary of the retrieved data.\nInclude reasoning to explain how the retrieved data relates to the query or context, without repeating the specific contents of the table.\n\n2. Table Placeholder Usage:\nAlways represent the retrieved data using the placeholder <table_i>, where i a number starting from 0 corresponds to the `source_number` field of the tool call result.\nexample: \nTo display the data from:\n{\n    \"source_number\": 21,\n    \"content\": [\n        {\"name\": \"John\", \"age\": 30},\n        {\"name\": \"Jane\", \"age\": 25}\n    ]\n}\nyou should use <table_21>.\n\nAvoid re-writing, paraphrasing, or restating the data in the table; let the placeholder represent the table contents.\nTables are numbered based on the order of their retrieval. Ensure the numbering aligns correctly with the order of the TableSearch tool calls.\nIMPORTANT: Even if you want to display 1 or 2 rows, use a table and DO NOT display the data in a narrative format.\n\n3. Preferred Format:\nWhenever possible, prioritize displaying data in a table format rather than in narrative text.\nAvoid redundancies and ensure clarity by referring to the appropriate placeholder for the table instead of duplicating the data.\n",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "toolFormatReminderForUserPrompt": {
                    "default": "Remember to always use <table_i> placeholders to display the data and don't re-write the tables or the data inside them! Don't display the same table twice! Use the table placeholder even if you only want to display 1 or 2 rows.ALWAYS display the data in a table rather than narrative format even if only some columns are relevant to user query",
                    "title": "Tool Format Reminder For User Prompt",
                    "type": "string"
                },
                "evaluationCheckList": {
                    "default": [],
                    "items": {
                        "$ref": "#/$defs/EvaluationMetricName"
                    },
                    "title": "Evaluation Check List",
                    "type": "array"
                },
                "addColumnsInWhereClause": {
                    "default": true,
                    "title": "Add Columns In Where Clause",
                    "type": "boolean"
                },
                "addColumnsInOrderByClause": {
                    "default": true,
                    "title": "Add Columns In Order By Clause",
                    "type": "boolean"
                }
            },
            "title": "Table Search Config",
            "type": "object"
        },
        "TickerExtractionConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_0806",
                    "title": "Language Model"
                },
                "topK": {
                    "default": 10,
                    "title": "Top K",
                    "type": "integer"
                },
                "confidenceThreshold": {
                    "default": 0.9,
                    "title": "Confidence Threshold",
                    "type": "number"
                }
            },
            "title": "Ticker Extraction Config",
            "type": "object"
        },
        "TickerPlotRendererConfig": {
            "properties": {
                "name": {
                    "const": "ticker_plot",
                    "default": "ticker_plot",
                    "title": "Name",
                    "type": "string"
                },
                "start_date": {
                    "format": "date",
                    "title": "Start Date",
                    "type": "string"
                },
                "period": {
                    "default": "PT30M",
                    "format": "duration",
                    "title": "Period",
                    "type": "string"
                },
                "plotly_config": {
                    "$ref": "#/$defs/PlotlyTickerPlotConfig",
                    "default": {
                        "name": "plotly",
                        "width": 850,
                        "height": 500,
                        "scale": 4.0,
                        "numXticks": 10,
                        "metricsNumCols": 3,
                        "scopeId": "<SCOPE_ID_PLACEHOLDER>",
                        "filenamePrefix": "stock_ticker_history",
                        "imageFormat": "jpeg",
                        "template": "plotly_dark",
                        "metricToDisplayName": {
                            "Close": "Close",
                            "Dividend Yield": "Dividend Yield",
                            "High": "High",
                            "Market Cap": "Market Cap",
                            "Open": "Open",
                            "Price Earnings Ratio": "P/E Ratio",
                            "Volatility 30 Days": "Volatility 30 Days",
                            "Volume": "Volume",
                            "Year High": "Year High",
                            "Year Low": "Year Low"
                        }
                    }
                },
                "width_template_inches": {
                    "default": 6,
                    "title": "Width Template Inches",
                    "type": "number"
                },
                "height_template_inches": {
                    "default": 3.5,
                    "title": "Height Template Inches",
                    "type": "number"
                },
                "ticker_field_name": {
                    "default": "ticker",
                    "title": "Ticker Field Name",
                    "type": "string"
                },
                "instrument_type_field_name": {
                    "default": "instrument_type",
                    "title": "Instrument Type Field Name",
                    "type": "string"
                }
            },
            "title": "TickerPlotRendererConfig",
            "type": "object"
        },
        "ToolBuildConfig": {
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string"
                },
                "configuration": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/ImageContentConfig"
                        },
                        {
                            "$ref": "#/$defs/DocumentParserConfig"
                        },
                        {
                            "$ref": "#/$defs/QuartrEventsToolConfig"
                        },
                        {
                            "$ref": "#/$defs/TableSearchConfig"
                        },
                        {
                            "$ref": "#/$defs/WebSearchConfig"
                        },
                        {
                            "$ref": "#/$defs/InternalSearchConfig"
                        },
                        {
                            "$ref": "#/$defs/BarChartConfig"
                        },
                        {
                            "$ref": "#/$defs/LineChartConfig"
                        },
                        {
                            "$ref": "#/$defs/PieChartConfig"
                        },
                        {
                            "$ref": "#/$defs/DocumentGeneratorToolConfig"
                        },
                        {
                            "$ref": "#/$defs/ChartGeneratorToolConfig"
                        },
                        {
                            "$ref": "#/$defs/ConversationSummaryConfig"
                        },
                        {
                            "$ref": "#/$defs/DocumentSummarizerToolConfig"
                        },
                        {
                            "$ref": "#/$defs/InvestmentProposalToolConfig"
                        },
                        {
                            "$ref": "#/$defs/ReadContentToolConfig"
                        }
                    ],
                    "title": "Configuration"
                },
                "displayName": {
                    "default": "",
                    "title": "Display Name",
                    "type": "string"
                },
                "icon": {
                    "$ref": "#/$defs/ToolIcon",
                    "default": "IconBook",
                    "title": "Icon"
                },
                "selectionPolicy": {
                    "$ref": "#/$defs/ToolSelectionPolicy",
                    "default": "ByUser",
                    "title": "Selection Policy"
                },
                "isExclusive": {
                    "default": false,
                    "description": "This tool must be chosen by the user and no other tools are used for this iteration.",
                    "title": "Is Exclusive",
                    "type": "boolean"
                },
                "isEnabled": {
                    "default": true,
                    "title": "Is Enabled",
                    "type": "boolean"
                }
            },
            "required": [
                "name",
                "configuration"
            ],
            "title": "Tool Build Config",
            "type": "object"
        },
        "ToolIcon": {
            "enum": [
                "IconAnalytics",
                "IconBook",
                "IconFolderData",
                "IconIntegration",
                "IconTextCompare",
                "IconWorld",
                "IconQuickReply",
                "IconChatPlus"
            ],
            "title": "ToolIcon",
            "type": "string"
        },
        "ToolSelectionPolicy": {
            "description": "Determine the usage policy of tools.",
            "enum": [
                "ForcedByDefault",
                "OnByDefault",
                "ByUser"
            ],
            "title": "ToolSelectionPolicy",
            "type": "string"
        },
        "TruncatePageToMaxTokensConfig": {
            "properties": {
                "strategy": {
                    "const": "truncate",
                    "default": "truncate",
                    "title": "Strategy",
                    "type": "string"
                },
                "truncateToMaxTokens": {
                    "default": 5000,
                    "description": "Max number of tokens to truncate the page to",
                    "title": "Truncate To Max Tokens",
                    "type": "integer"
                }
            },
            "title": "Truncate Page To Max Tokens Config",
            "type": "object"
        },
        "UploadConfig": {
            "properties": {
                "skipIngestion": {
                    "default": false,
                    "title": "Skip Ingestion",
                    "type": "boolean"
                },
                "uploadToChat": {
                    "default": true,
                    "title": "Upload To Chat",
                    "type": "boolean"
                },
                "uploadScopeId": {
                    "default": "<SCOPE_ID_PLACEHOLDER>",
                    "title": "Upload Scope Id",
                    "type": "string"
                },
                "uploadedFilenamePrefix": {
                    "default": "investment_proposal",
                    "title": "Uploaded Filename Prefix",
                    "type": "string"
                }
            },
            "title": "Upload Config",
            "type": "object"
        },
        "UploadedContentConfig": {
            "properties": {
                "approximateMaxTokensForUploadedContentStuffContextWindow": {
                    "default": 80000,
                    "description": "The approximate maximum number of tokens for uploaded content to be used in the context window before going to internal searchBe careful as it could trigger a too large message if not correctly combined with other tools and percentage history",
                    "title": "Approximate Max Tokens For Uploaded Content Stuff Context Window",
                    "type": "integer"
                },
                "userContextWindowLimitWarning": {
                    "default": "The uploaded content cannot is too large to fit into the model. UniqueAI will search for relevant sections in the material and combine it with knowledge base content",
                    "description": "Jinja template to show when using the Internal Search instead of upload and chat tool",
                    "title": "User Context Window Limit Warning",
                    "type": "string"
                }
            },
            "title": "Uploaded Content Config",
            "type": "object"
        },
        "WebSearchConfig": {
            "properties": {
                "languageModel": {
                    "anyOf": [
                        {
                            "$ref": "#/$defs/LanguageModelName"
                        },
                        {
                            "$ref": "#/$defs/LanguageModelInfo"
                        }
                    ],
                    "default": "AZURE_GPT_4o_2024_1120",
                    "title": "Language Model"
                },
                "limitTokenSources": {
                    "default": 10000,
                    "description": "Token Source Limit",
                    "title": "Limit Token Sources",
                    "type": "integer"
                },
                "searchEngineConfig": {
                    "description": "Search Engine Configuration",
                    "discriminator": {
                        "mapping": {
                            "Bing": "#/$defs/BingConfig",
                            "Google": "#/$defs/GoogleConfig"
                        },
                        "propertyName": "searchEngineName"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/$defs/BingConfig"
                        },
                        {
                            "$ref": "#/$defs/GoogleConfig"
                        }
                    ],
                    "title": "Search Engine Configuration"
                },
                "crawlerConfig": {
                    "description": "The crawler configuration.",
                    "discriminator": {
                        "mapping": {
                            "BasicCrawler": "#/$defs/BasicCrawlerConfig",
                            "Crawl4AiCrawler": "#/$defs/Crawl4AiCrawlerConfig",
                            "NoCrawler": "#/$defs/NoCrawlerConfig"
                        },
                        "propertyName": "crawlerType"
                    },
                    "oneOf": [
                        {
                            "$ref": "#/$defs/Crawl4AiCrawlerConfig"
                        },
                        {
                            "$ref": "#/$defs/BasicCrawlerConfig"
                        },
                        {
                            "$ref": "#/$defs/NoCrawlerConfig"
                        }
                    ],
                    "title": "Crawler Config"
                },
                "contentAdapterConfig": {
                    "$ref": "#/$defs/ContentAdapterConfig",
                    "description": "The content adapter configuration",
                    "title": "Content Adapter Configuration"
                },
                "chunkRelevancySortConfig": {
                    "$ref": "#/$defs/ChunkRelevancySortConfig",
                    "description": "Chunk Relevancy Sort Configuration",
                    "title": "Chunk Relevancy Sort Configuration"
                },
                "evaluationCheckList": {
                    "default": [
                        "hallucination"
                    ],
                    "description": "Check list of evaluations executed conditionally after the answer is generated",
                    "items": {
                        "$ref": "#/$defs/EvaluationMetricName"
                    },
                    "title": "Evaluation Check List",
                    "type": "array"
                },
                "queryRefinementConfig": {
                    "$ref": "#/$defs/QueryRefinementConfig",
                    "description": "The query refinement configuration",
                    "title": "Query Refinement Configuration"
                },
                "toolParametersConfig": {
                    "$ref": "#/$defs/WebSearchToolParametersConfig",
                    "description": "The tool parameters configuration",
                    "title": "Tool Parameters Configuration"
                },
                "toolDescription": {
                    "default": "Issues a query to a search engine and displays the results from the web. If user provide a specific link, you should include it in the query (not only the domain).",
                    "description": "The tool description",
                    "title": "Tool Description",
                    "type": "string"
                },
                "toolDescriptionForSystemPrompt": {
                    "default": "Use the `WebSearch` tool to access up-to-date information from the web or when responding to the user requires information about their location. Some examples of when to use the `WebSearch` tool include:\n- Local Information: Use the `WebSearch` tool to respond to questions that require information about the user's location, such as the weather, local businesses, or events.\n- Freshness: If up-to-date information on a topic could potentially change or enhance the answer, call the `WebSearch` tool any time you would otherwise refuse to answer a question because your knowledge might be out of date.\n- Niche Information: If the answer would benefit from detailed information not widely known or understood (which might be found on the internet), such as details about a small neighborhood, a less well-known company, or arcane regulations, use web sources directly rather than relying on the distilled knowledge from pretraining.\n- Accuracy: If the cost of a small mistake or outdated information is high (e.g., using an outdated version of a software library or not knowing the date of the next game for a sports team), then use the `WebSearch` tool.",
                    "title": "Tool Description For System Prompt",
                    "type": "string"
                },
                "toolFormatInformationForSystemPrompt": {
                    "default": "",
                    "title": "Tool Format Information For System Prompt",
                    "type": "string"
                },
                "experimentalFeatures": {
                    "$ref": "#/$defs/ExperimentalFeatures",
                    "default": {
                        "fullSourcesSerializeDump": false
                    }
                }
            },
            "title": "Web Search Config",
            "type": "object"
        },
        "WebSearchToolParametersConfig": {
            "properties": {
                "queryDescription": {
                    "default": "The search query to issue to the web.",
                    "description": "The tool parameter query description",
                    "title": "Query Description",
                    "type": "string"
                },
                "dateRestrictDescription": {
                    "default": "Restricts results to a recent time window. Format: `[period][number]` \u2014 `d`=days, `w`=weeks, `m`=months, `y`=years.  \nExamples: `d1` (24h), `w1` (1 week), `m3` (3 months), `y1` (1 year).  \nOmit for no date filter. Avoid adding date terms in the main query.",
                    "description": "The tool parameter date restrict description",
                    "title": "Date Restrict Description",
                    "type": "string"
                }
            },
            "title": "Web Search Tool Parameters Config",
            "type": "object"
        },
        "WildcardBackendConfig": {
            "properties": {
                "backendName": {
                    "const": "wildcard",
                    "default": "wildcard",
                    "title": "Backend Name",
                    "type": "string"
                }
            },
            "title": "Wildcard Backend Config",
            "type": "object"
        }
    },
    "description": "Configure the search agent.",
    "properties": {
        "languageModel": {
            "anyOf": [
                {
                    "$ref": "#/$defs/LanguageModelName"
                },
                {
                    "$ref": "#/$defs/LanguageModelInfo"
                }
            ],
            "default": "AZURE_GPT_4o_2024_1120",
            "title": "Language Model"
        },
        "temperature": {
            "default": 0.0,
            "title": "Temperature",
            "type": "number"
        },
        "additionalLlmOptions": {
            "additionalProperties": true,
            "default": {},
            "description": "Additional options to pass to the language model.",
            "title": "Additional Llm Options",
            "type": "object"
        },
        "maxLoopIterations": {
            "default": 8,
            "title": "Max Loop Iterations",
            "type": "integer"
        },
        "tokenLimits": {
            "$ref": "#/$defs/LoopAgentTokenLimitsConfig",
            "default": null,
            "title": "Token Limits"
        },
        "tools": {
            "default": [
                {
                    "name": "InternalSearch",
                    "configuration": {
                        "chatOnly": false,
                        "chunkRelevancySortConfig": {
                            "additionalLlmOptions": {},
                            "enabled": false,
                            "fallbackLanguageModel": "AZURE_GPT_35_TURBO_0125",
                            "languageModel": "AZURE_GPT_35_TURBO_0125",
                            "maxTasks": null,
                            "relevancyLevelOrder": {
                                "high": 0,
                                "low": 2,
                                "medium": 1
                            },
                            "relevancyLevelsToConsider": [
                                "high",
                                "medium",
                                "low"
                            ],
                            "structuredOutputConfig": {
                                "enabled": false,
                                "extract_fact_list": false,
                                "fact_description": "A fact is an information that is directly answers the user's query. Make sure to emphasize the important information from the fact with bold text.",
                                "fact_list_description": "A list of relevant facts extracted from the source that supports or answers the user's query.",
                                "reason_description": "A brief explanation justifying your evaluation decision.",
                                "value_description": "Assessment of how relevant the facts are to the query. Must be one of: ['low', 'medium', 'high']."
                            }
                        },
                        "chunkedSources": true,
                        "evaluationCheckList": [
                            "hallucination"
                        ],
                        "experimentalFeatures": {
                            "fullSourcesSerializeDump": false
                        },
                        "limit": 50,
                        "maxTokensForSources": 10000,
                        "paramDescriptionLanguage": "The language that the user was the query in",
                        "paramDescriptionSearchString": "An expanded term that is optimized for vector and full text search based on the users query it must be in english",
                        "rerankerConfig": null,
                        "scopeIds": null,
                        "scopeToChatOnUpload": false,
                        "searchLanguage": "english",
                        "searchType": "COMBINED",
                        "sourceFormatConfig": {
                            "sections": {
                                "document": "<|document|>{}<|/document|>\n",
                                "info": "<|info|>{}<|/info|>\n"
                            },
                            "sourceTemplate": "<source${index}>${document}${info}${text}</source${index}>"
                        },
                        "toolDescription": "Search in the company knowledge base for information on policies, procedures, benefits, groups, financial information or specific people. This should be your go-to tool if no other tools are applicable.",
                        "toolDescriptionForSystemPrompt": "You can use the InternalSearch tool to access internal company documentations, including information on policies, procedures, benefits, groups, financial details, and specific individuals. If this tool can help answer your question, feel free to use it to search the internal knowledge base for more information. If possible always try to get information from the internal knowledge base with the InternalSearch tool before using other tools.",
                        "toolFormatInformationForSystemPrompt": ""
                    },
                    "displayName": "",
                    "icon": "IconBook",
                    "selectionPolicy": "ByUser",
                    "isExclusive": false,
                    "isEnabled": true
                },
                {
                    "name": "WebSearch",
                    "configuration": {
                        "chunkRelevancySortConfig": {
                            "additionalLlmOptions": {},
                            "enabled": false,
                            "fallbackLanguageModel": "AZURE_GPT_35_TURBO_0125",
                            "languageModel": "AZURE_GPT_35_TURBO_0125",
                            "maxTasks": null,
                            "relevancyLevelOrder": {
                                "high": 0,
                                "low": 2,
                                "medium": 1
                            },
                            "relevancyLevelsToConsider": [
                                "high",
                                "medium",
                                "low"
                            ],
                            "structuredOutputConfig": {
                                "enabled": false,
                                "extract_fact_list": false,
                                "fact_description": "A fact is an information that is directly answers the user's query. Make sure to emphasize the important information from the fact with bold text.",
                                "fact_list_description": "A list of relevant facts extracted from the source that supports or answers the user's query.",
                                "reason_description": "A brief explanation justifying your evaluation decision.",
                                "value_description": "Assessment of how relevant the facts are to the query. Must be one of: ['low', 'medium', 'high']."
                            }
                        },
                        "contentAdapterConfig": {
                            "chunkSize": 1000,
                            "chunkingMaxWorkers": 10,
                            "contentProcessingStrategyConfig": {
                                "strategy": "truncate",
                                "truncateToMaxTokens": 5000
                            }
                        },
                        "crawlerConfig": {
                            "cleaningStrategyConfig": {
                                "markdownCleaningTimeout": 5.0,
                                "removeMultipleLinebreaks": true,
                                "removeNestedImagesAndLinks": true,
                                "removeRepeatingPatterns": false,
                                "removeSimpleImagesAndLinks": true
                            },
                            "crawlerType": "BasicCrawler",
                            "semaphoreCount": 10,
                            "timeout": 5.0
                        },
                        "evaluationCheckList": [
                            "hallucination"
                        ],
                        "experimentalFeatures": {
                            "fullSourcesSerializeDump": false
                        },
                        "languageModel": "AZURE_GPT_4o_2024_1120",
                        "limitTokenSources": 10000,
                        "queryRefinementConfig": {
                            "enabled": true,
                            "systemPrompt": "You're task consist of a query for a search engine.\n\n** Refine the query Guidelines **\n- The query should be a string that does not exceed 6 key words.\n- Never include temporal information in the refined query. There is a separate field for this purpose.\n- You may add the additional advanced syntax when relevant to refine the results:\n- Use quotes `\"...\"` for exact words (avoid doing it for phrases as it will dramatically reduce the number of results).\n- Use `-word` to exclude terms.\n- Use `site:domain.com` to restrict to a site.\n- Use `intitle:`, `inurl:` to target title/URL.\n- Use `OR` for alternatives, `*` as a wildcard.\n- Use `..` for number ranges (e.g., 2010..2020).\n- Use `AROUND(N)` to find terms close together.\n- Use `define:word` for definitions.\n- Combine operators for powerful filtering.\n\n** IMPORTANT **\n- You should not use any date restriction in the refined query."
                        },
                        "searchEngineConfig": {
                            "bannedDomains": [],
                            "customSearchConfig": {
                                "boostedSearchDomains": [],
                                "id": null,
                                "searchCountryCode": null,
                                "searchMarket": null
                            },
                            "fetchSize": 10,
                            "searchEngineName": "Bing",
                            "urlPatternBlacklist": [
                                ".*\\.pdf$"
                            ]
                        },
                        "toolDescription": "Issues a query to a search engine and displays the results from the web. If user provide a specific link, you should include it in the query (not only the domain).",
                        "toolDescriptionForSystemPrompt": "Use the `WebSearch` tool to access up-to-date information from the web or when responding to the user requires information about their location. Some examples of when to use the `WebSearch` tool include:\n- Local Information: Use the `WebSearch` tool to respond to questions that require information about the user's location, such as the weather, local businesses, or events.\n- Freshness: If up-to-date information on a topic could potentially change or enhance the answer, call the `WebSearch` tool any time you would otherwise refuse to answer a question because your knowledge might be out of date.\n- Niche Information: If the answer would benefit from detailed information not widely known or understood (which might be found on the internet), such as details about a small neighborhood, a less well-known company, or arcane regulations, use web sources directly rather than relying on the distilled knowledge from pretraining.\n- Accuracy: If the cost of a small mistake or outdated information is high (e.g., using an outdated version of a software library or not knowing the date of the next game for a sports team), then use the `WebSearch` tool.",
                        "toolFormatInformationForSystemPrompt": "",
                        "toolParametersConfig": {
                            "dateRestrictDescription": "Restricts results to a recent time window. Format: `[period][number]` \u2014 `d`=days, `w`=weeks, `m`=months, `y`=years.  \nExamples: `d1` (24h), `w1` (1 week), `m3` (3 months), `y1` (1 year).  \nOmit for no date filter. Avoid adding date terms in the main query.",
                            "queryDescription": "The search query to issue to the web."
                        }
                    },
                    "displayName": "",
                    "icon": "IconBook",
                    "selectionPolicy": "ByUser",
                    "isExclusive": false,
                    "isEnabled": true
                }
            ],
            "items": {
                "$ref": "#/$defs/ToolBuildConfig"
            },
            "title": "Tools",
            "type": "array"
        },
        "thinkingStepsDisplay": {
            "default": false,
            "title": "Thinking Steps Display",
            "type": "boolean"
        },
        "projectName": {
            "default": "Unique AI",
            "description": "The project name as optained from spaces 2.0",
            "title": "Project Name",
            "type": "string"
        },
        "customInstructions": {
            "default": "",
            "description": "A custom instruction provided by the system admin.",
            "title": "Custom Instructions",
            "type": "string"
        },
        "systemMessageToolSelectionCitationAppendix": {
            "default": "**Reference Guidelines**\nWhenever you use information from retrieved information,\nyou must adhere to strict reference guidelines.\nYou must strictly reference each fact used with the `source_number`\nof the corresponding passage, in the following format:\n'[source<source_number>]'.\n\nExample:\n- The stock price of Apple Inc. is $150 [source0] and the company's revenue increased by 10% [source1].\n- Moreover, the company's market capitalization is $2 trillion [source2][source3].\n- Our internal documents tell us to invest[source4] (Internal)\n\nA fact is preferably referenced by ONLY ONE source, e.g [sourceX],\n which should be the most relevant source for the fact.\nFollow these guidelines closely and be sure to use the proper `source_number` when referencing facts.\nMake sure that your reference follow the format [sourceX] and that the source number is correct.\nSource is written in singular form and the number is written in digits.\n",
            "title": "System Message Tool Selection Citation Appendix",
            "type": "string"
        },
        "systemMessageMultiSourceToolRetrieved": {
            "default": "Create two sections in your answer one based on the the retrieved sources from InternalSearch and one for WebSearch\ne.g.\n# Web Search Findings\n...\n# Internal Search Findings\n...\n",
            "title": "System Message Multi Source Tool Retrieved",
            "type": "string"
        },
        "systemMessageResponseStyle": {
            "default": "### 1. Use Markdown for Structure\n- Use headings (`##`) and subheadings (`###`) to organize content.\n- Include **smileys or relevant emojis** in headings to create a friendly and inviting tone (e.g., `## \ud83d\udccc Summary`, `### \ud83d\ude80 How it Works`).\n\n### 2. Text Styling\n- Use **bold** to highlight important actions or terms.\n- Use *italics* for emphasis or side remarks.\n- Use `inline code` for technical terms, file names, commands, or values.\n- Break up long paragraphs for readability\u2014**aim for visual clarity**.\n\n### 3. Lists & Steps\n- Use bullet points for lists.\n- Use numbered steps for instructions or sequences.\n- Avoid walls of text.\n\n### 4. Tables & Visual Aids\n- Present structured data using tables when applicable.\n- Include diagrams or charts if supported and relevant.\n\n### 5. Code\n- Encapsulate code with ``` for multiline code snippets.\n- Encapsulate code with ` for in text code snippets.\n",
            "title": "System Message Response Style",
            "type": "string"
        },
        "systemPromptTemplate": {
            "description": "The system prompt template as a Jinja2 template string.",
            "title": "System Prompt Template",
            "type": "string"
        },
        "userMessagePromptTemplate": {
            "description": "The user message prompt template as a Jinja2 template string.",
            "title": "User Message Prompt Template",
            "type": "string"
        },
        "followUpQuestionsConfig": {
            "$ref": "#/$defs/FollowUpQuestionsConfig",
            "default": {
                "languageModel": "AZURE_GPT_4o_2024_0806",
                "userPrompt": "You can find below the conversation history between the user and the assistant.\n\n<conversation-history>\n{% for message in conversation_history %}\n{{message.role}}: {{message.content}}\n{% endfor %}\n</conversation-history>\n\nYou can find below some additional context that might be interesting to generate follow-up questions from:\n\n{% if additional_context %}\n<additional-context>\n{{additional_context}}\n</additional-context>\n{% endif %}\n\n{% if language %}\nGenerate the follow-up questions in {{language}} language.\nRemember that you should not repeat questions that you have seen in the conversation history.\n{% endif %}",
                "systemPrompt": "Your a helpful assistant that generates follow-up questions based on the conversation history and potentially more context. \nThe assistant is designed to respond to the user's question in a conversational manner.\nYour task is to generate follow-up questions that are likely to be asked by the user after the assistant's response.\n\nA follow-up question can be one of the following categories (not necessarily mutually exclusive):\n- Seeking clarification on the last answer from the assistant\n- Gathering additional interesting information\n- Asking for more details about the assistant's response\n\n{% if examples | length > 0 %}\nHere is some examples of follow-up questions:\n{% for example in examples %}\nExample {{loop.index}}:\n- Category: {{example.category}}\n- Question: {{example.question}}\n{% endfor %}\n{% endif %}\n\nYour task is to generate follow-up {{number_of_questions}} questions that are likely to be asked by the user after the assistant's response.\n\nYou should avoid repeating questions that you have seen in the conversation history.\nYou should take the examples as inspiration, but not copy them exactly or paraphrase them.\n\nYou should strictly follow the output schema provided below:\n{{output_schema}}",
                "suggestionsFormat": "{%if questions|length > 0%}\n<follow-up-question>\n<hr>\n<strong><em>&nbsp;&nbsp;Suggested follow-up questions:</em></strong>\n<br>\n<br>\n{%for question in questions%}\n[{{question.question}}](https://prompt={{question.encoded_uri}})\n{%endfor%}\n</follow-up-question>\n{%endif%}",
                "examples": [
                    {
                        "category": "clarification",
                        "question": "Can you clarify the meaning of 'implied volatility'?"
                    },
                    {
                        "category": "elaboration",
                        "question": "Can you explain more about how compound interest works over time?"
                    },
                    {
                        "category": "comparison",
                        "question": "How does compound interest compare to simple interest?"
                    },
                    {
                        "category": "implication",
                        "question": "If the Fed raises interest rates again, what does that mean for mortgage rates?"
                    },
                    {
                        "category": "summary",
                        "question": "Can you summarize the main points of a good retirement investment strategy?"
                    },
                    {
                        "category": "continuation",
                        "question": "What should I do after setting up my emergency fund?"
                    },
                    {
                        "category": "other",
                        "question": "Do you know any podcasts that cover personal finance topics?"
                    }
                ],
                "numberOfQuestions": 3,
                "adaptToLanguage": true
            }
        },
        "evaluationConfig": {
            "$ref": "#/$defs/EvaluationConfig",
            "default": {
                "maxReviewSteps": 0,
                "hallucinationConfig": {
                    "additionalLlmOptions": {},
                    "customPrompts": {
                        "systemPrompt": "\nYou will receive a question, references, a conversation between a user and an agent, and an output. \nThe output is the answer to the question. \nYour task is to evaluate if the output is fully supported by the information provided in the references and conversation, and provide explanations on your judgement in 2 sentences.\n\nUse the following entailment scale to generate a score:\n[low] - All information in output is supported by the references/conversation, or extractions from the references/conversation.\n[medium] - The output is supported by the references/conversation to some extent, but there is at least some information in the output that is not discussed in the references/conversation. For example, if an instruction asks about two concepts and the references/conversation only discusses either of them, it should be considered a [medium] hallucination level.\n[high] - The output contains information that is not part of the references/conversation, is unrelated to the references/conversation, or contradicts the references/conversation.\n\nMake sure to not use any external information/knowledge to judge whether the output is true or not. Only check whether the output is supported by the references/conversation, and not whether the output is correct or not. Also do not evaluate if the references/conversation contain further information that is not part of the output but could be relevant to the question. If the output mentions a plot or chart, ignore this information in your evaluation.\n\nYour answer must be in JSON format:\n{\n \"reason\": Your explanation of your judgement of the evaluation,\n \"value\": decision, must be one of the following: [\"high\", \"medium\", \"low\"]\n}                                                  \n",
                        "systemPromptDefault": "\nYou will receive a question and an output. \nThe output is the answer to the question. \nThe situation is that no references could be found to answer the question. Your task is to evaluate if the output contains any information to answer the question,\nand provide a short explanations of your reasoning in 2 sentences. Also mention in your explanation that no references were provided to answer the question.\n\nUse the following entailment scale to generate a score:\n[low] - The output does not contain any information to answer the question.\n[medium] - The output contains some information to answer the question, but does not answer the question entirely. \n[high] - The output answers the question.\n\nIt is not considered an answer when the output relates to the questions subject. Make sure to not use any external information/knowledge to judge whether the output is true or not. Only check that the output does not answer the question, and not whether the output is correct or not.\nYour answer must be in JSON format:\n{\n \"reason\": Your explanation of your reasoning of the evaluation,\n \"value\": decision, must be one of the following: [\"low\", \"medium\", \"high\"]\n}\n",
                        "userPrompt": "\nHere is the data:\n\nInput:\n'''\n$input_text\n'''\n\nReferences:\n'''\n$contexts_text\n'''\n\nConversation:\n'''\n$history_messages_text\n'''\n\nOutput:\n'''\n$output_text\n'''\n\nAnswer as JSON:\n",
                        "userPromptDefault": "                                                  \nHere is the data:\n\nInput:\n'''\n$input_text\n'''\n\nOutput:\n'''\n$output_text\n'''\n\nAnswer as JSON:\n"
                    },
                    "enabled": false,
                    "languageModel": "AZURE_GPT_4o_2024_1120",
                    "name": "hallucination",
                    "scoreToLabel": {
                        "HIGH": "RED",
                        "LOW": "GREEN",
                        "MEDIUM": "YELLOW"
                    },
                    "scoreToTitle": {
                        "HIGH": "High Hallucination",
                        "LOW": "No Hallucination Detected",
                        "MEDIUM": "Hallucination Warning"
                    }
                }
            }
        },
        "stockTickerConfig": {
            "$ref": "#/$defs/StockTickerConfig",
            "default": {
                "dataRetrievalConfig": {
                    "period": "PT30M",
                    "startDate": "2025-01-01"
                },
                "detectionConfig": {
                    "additionalLlmOptions": {},
                    "languageModel": "AZURE_GPT_35_TURBO_0125",
                    "memoryConfig": {
                        "maxChatInteractions": 3
                    }
                },
                "plottingConfig": {
                    "filenamePrefix": "stock_ticker_history",
                    "height": 500,
                    "imageFormat": "jpeg",
                    "metricToDisplayName": {
                        "Close": "Close",
                        "Dividend Yield": "Dividend Yield",
                        "High": "High",
                        "Market Cap": "Market Cap",
                        "Open": "Open",
                        "Price Earnings Ratio": "P/E Ratio",
                        "Volatility 30 Days": "Volatility 30 Days",
                        "Volume": "Volume",
                        "Year High": "Year High",
                        "Year Low": "Year Low"
                    },
                    "metricsNumCols": 3,
                    "name": "plotly",
                    "numXticks": 10,
                    "scale": 4.0,
                    "scopeId": "<SCOPE_ID_PLACEHOLDER>",
                    "template": "plotly_dark",
                    "width": 850
                },
                "enabled": false
            }
        },
        "referenceManagerConfig": {
            "anyOf": [
                {
                    "$ref": "#/$defs/ReferenceManagerConfig"
                },
                {
                    "type": "null"
                }
            ],
            "default": null,
            "description": "The reference manager config. If None, the reference manager will not be used.",
            "title": "Reference Manager Config"
        },
        "forceChecksOnStreamResponseReferences": {
            "default": [
                "hallucination"
            ],
            "description": "A list of checks to force on references. This is used to add hallucination check to references without new tool calls.",
            "items": {
                "$ref": "#/$defs/EvaluationMetricName"
            },
            "title": "Force Checks On Stream Response References",
            "type": "array"
        },
        "uploadedContentConfig": {
            "anyOf": [
                {
                    "$ref": "#/$defs/UploadedContentConfig"
                },
                {
                    "type": "null"
                }
            ],
            "description": "The uploaded content config.",
            "title": "Uploaded Content Config"
        }
    },
    "title": "Search Agent Config",
    "type": "object"
}