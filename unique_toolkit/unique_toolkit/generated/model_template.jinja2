# Generated models for path: {{ path }}
from __future__ import annotations

from typing import Any, Dict, List, Optional, Union
from pydantic import BaseModel, Field, ConfigDict, AwareDatetime
from enum import Enum
from datetime import datetime


# URL path template for this endpoint
from string import Template

PATH_TEMPLATE = Template("{{ template_path }}")
PATH = "{{ path }}"  # Original path with {} placeholders


{% if has_path_params %}
def build_url(path_params: PathParams) -> str:
    """Build the full URL path with the given path parameters.
    
    Can also be called directly with a dict:
        PATH_TEMPLATE.substitute({{ param_examples }})
    """
    return PATH_TEMPLATE.substitute(**path_params.model_dump(by_alias=False))
{% else %}
def build_url() -> str:
    """Build the full URL path (no parameters needed)."""
    return PATH
{% endif %}


{% for model in models %}
{{ model }}
{% if not loop.last %}

{% endif %}
{% endfor %}

