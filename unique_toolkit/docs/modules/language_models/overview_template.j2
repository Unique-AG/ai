# Language Models Overview

This page provides a comprehensive overview of all supported language models in the unique_toolkit.

## Model Properties

The following properties are documented for each model:

- **Name**: The display name of the model
- **Provider**: The service provider (Azure, LiteLLM, etc.)
- **Version**: Model version information
- **Encoder**: Tokenizer/encoder used within the code for the model
- **Token Limits**: Input, output, and total token limits
- **Capabilities**: Supported features (streaming, function calling, etc.)
- **Temperature Bounds**: Min/max temperature settings (if available)

## Quick Reference

### Token Limits Summary

| Model | Provider | Input Tokens | Output Tokens | Total Tokens |
|-------|----------|--------------|---------------|--------------|
{%- for model in all_models %}
| [{{ model.display_name }}](models/{{ model.filename }}) | {{ model.provider.value if model.provider.value else model.provider }} | {{ "{:,}".format(model.token_limits.token_limit_input) }} | {{ "{:,}".format(model.token_limits.token_limit_output) }} | {{ "{:,}".format(model.token_limits.token_limit) }} |
{%- endfor %}
### Capabilities Matrix

| Model | Streaming | Function Calling | Structured Output | Reasoning |
|-------|-----------|------------------|-------------------|-----------|
{%- for model in all_models %}
| [{{ model.display_name }}](models/{{ model.filename }}) | {{ '✅' if 'streaming' in model.capabilities else '❌' }} | {{ '✅' if 'function_calling' in model.capabilities else '❌' }} | {{ '✅' if 'structured_output' in model.capabilities else '❌' }} | {{ '✅' if 'reasoning' in model.capabilities else '❌' }} |
{%- endfor %}
## Usage

To use any of these models in your application:

```python
from unique_toolkit import LanguageModelName
from unique_toolkit.language_model.infos import LanguageModelInfo

# Get model information
model_name = LanguageModelName.AZURE_GPT_4o_2024_1120
info = LanguageModelInfo.from_name(model_name)

# Use the model in your application
# ... your code here
```

## Model Selection Guide

### For High-Volume Applications
- **Cost-effective**: GPT-4o Mini, GPT-5 Mini, Claude 3.7 Sonnet
- **Balanced**: GPT-4o, GPT-5, Claude Sonnet 4

### For Complex Reasoning
- **Advanced**: o1, o3, Claude 3.7 Sonnet Thinking
- **Research**: o3 Deep Research, o4 Mini Deep Research

### For Function Calling
- **Reliable**: GPT-4o, GPT-5, Claude Sonnet 4
- **Fast**: GPT-4o Mini, GPT-5 Mini

### For Structured Output
- **All modern models** support structured output capabilities

---

*Last updated: {{ generation_date }}*
