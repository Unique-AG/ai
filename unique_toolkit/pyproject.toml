[tool.poetry]
name = "unique_toolkit"
version = "1.3.0"
description = ""
authors = [
    "Cedric Klinkert <cedric.klinkert@unique.ch>",
    "Martin Fadler <martin.fadler@unique.ch>",
    "Sadique Sheik <sadique@unique.ch>",
    "Fabian Schl√§pfer <fabian@unique.ch>",
    "Pascal Hauri <pascal@unique.ch>",
    "Ejiroghene Oki-Peter<oki-peter.ejiroghene@unique.ai>",
]
readme = ["README.md", "CHANGELOG.md"]
license = "Proprietary"

[tool.poetry.dependencies]
python = "^3.12"
typing-extensions = "^4.9.0"
pydantic = "^2.8.2"
pyhumps = "^3.8.0"
numpy = "^1.26.4"
tiktoken = "^0.7.0"
pydantic-settings = "^2.10.1"
sseclient = "^0.0.27"
openai = "^1.99.9"
platformdirs = "^4.0.0"
pillow = "^10.4.0"
unique-sdk = "^0.10.0"
jambo = "^0.1.2"
requests = "^2.32.5"

[tool.poetry.group.langchain]
optional = true

[tool.poetry.group.langchain.dependencies]
openai = "^1.97.0"
langchain = "^0.3.27"
langchain-openai = "^0.3.28"
langchain-core = "^0.3.76"

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
python-dotenv = "^1.0.1"
jinja2 = "^3.1.0"
mkdocs = "^1.6.1"
mkdocs-material = "^9.6.11"
mkdocs-include-markdown-plugin = "^7.1.5"
mkdocs-callouts = "^1.16.0"
mkdocstrings-python = "^1.16.10"
mkdocs-codeinclude-plugin = "^0.2.1"
mkdocs-entangled-plugin = "^0.4.0"
mkdocs-multirepo-plugin = "^0.8.3"
mkdocs-mermaid2-plugin = "^1.2.2"

[tool.poetry.group.dev.dependencies]
ruff = "0.12.10"
pytest = "^7.4.3"
tox = "^4.11.4"
pyright = "^1.1.341"
pytest-cov = "^4.1.0"
pre-commit = "^3.7.1"
pytest-asyncio = "^0.23.8"
pytest-mock = "^3.14.0"
platformdirs = "^4.0.0"
pillow = "^10.4.0"
ipykernel = "^6.29.5"
# unique-sdk = { path = "../unique_sdk" }
entangled-cli = "^2.1.13"
isort = "^6.0.1"
pydeps = "^3.0.1"
matplotlib = "^3.10.6"
deptry = "^0.23.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
exclude = [".venv", "docs"]


[tool.ruff.lint]
extend-select = ["I"]

[tool.deptry]
known_first_party = ["unique_toolkit"]
extend_exclude = ["(^|.*/)?test_.*\\.py$", "conftest\\.py$", "docs/"]

[tool.deptry.per_rule_ignores]
# Grouped optional dependencies like langchain group
DEP004 = ["langchain_openai", 
          "langchain_core",
          "langchain",
          "openai"]